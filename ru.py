import datetime
from email import message
import requests
import shutil
from telebot.types import LabeledPrice, Invoice, PreCheckoutQuery
user_states = {}

from testf import loggingf, adminloggingf, banloggingf

current_date = datetime.date.today()
current_date_time = datetime.datetime.now()
current_time = current_date_time.time()
from telebot import *
import vass_private
import json
from config import TOKEN
import random

def generate_password():
    return ''.join(random.choices('0123456789', k=6))
# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞ –±–æ—Ç–∞
bot = telebot.TeleBot('6501184236:AAG1uvyzQyn5HqXJwWZbT1kNoUHGdc452jo')

import pytz

users = {}
import sys

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é register_commands
def register_commands(bot):
    @bot.message_handler(commands=['menu'])
    def mennu(message):
        user_id = str(message.from_user.id)
        if vass_private.is_notify(user_id) == True:
            bot.send_video(message.from_user.id, 'https://media.giphy.com/media/oyy8kLIQgKCjmREmYp/giphy.gif', None,
                           'Text')

            with open("users.json", "r") as f_o:
                data_from_json = json.load(f_o)

            user_id = message.from_user.id
            username = message.from_user.username
            time.localtime()
            if str(user_id) not in data_from_json:
                data_from_json[user_id] = {"username": username, "password": generate_password(), "login": "True", "premium": "False", "out": "False", "notify": "True", "hiden": "False", "tester": "False", "RegDate": str(current_date), "RegTime": str(current_time),
                                   "status": "Tester", "ban": "False"}
            with open("users.json", "w") as f_o:
                json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
            user_id = message.from_user.id
            username = message.from_user.username
            time.localtime()

            chat_id = message.from_user.id
            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup = types.InlineKeyboardMarkup()

            nachnem = types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥', callback_data='marsh_start')
            menu = telebot.types.InlineKeyboardButton(text='–ú–µ–Ω—é')
            profile = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='profile')
            marshruts = types.InlineKeyboardButton('–ú—É–∑–µ–∏', callback_data='museum')

            settings = types.InlineKeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='settings')
            org = types.InlineKeyboardButton('–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ', callback_data='org_type_mogilev')
            keyboard.add(menu)
            markup.row(nachnem)
            markup.row(profile)
            # markup.row(marshruts, org)
            markup.row(settings)
            if vass_private.is_admin(user_id) == True:
                bot.send_message(chat_id,
                                 '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø–æ –±–µ–ª–∞—Ä—É—Å–∏\n–ù–∞—à –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\n\n–í–∞–º –≤—ã–¥–∞–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!\n',
                                 reply_markup=keyboard and markup)


            else:
                with open("users.json", "r") as f_o:
                    data_from_json = json.load(f_o)

                user_id = message.from_user.id
                username = message.from_user.username
                time.localtime()
                if str(user_id) not in data_from_json:
                    data_from_json[user_id] = {"username": username, "password": generate_password(), "login": "True", "premium": "False", "out": "False", "notify": "True", "hiden": "False", "tester": "False", "RegDate": str(current_date), "RegTime": str(current_time),
                                   "status": "Tester", "ban": "False"}
                with open("users.json", "w") as f_o:
                    json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
                bot.send_message(chat_id,
                                 '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø–æ –±–µ–ª–∞—Ä—É—Å–∏\n–ù–∞—à –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\n',
                                 reply_markup=keyboard and markup)
        else:
            with open("users.json", "r") as f_o:
                data_from_json = json.load(f_o)

            user_id = message.from_user.id
            username = message.from_user.username
            time.localtime()
            if str(user_id) not in data_from_json:
                data_from_json[user_id] = {"username": username, "password": generate_password(), "login": "True", "premium": "False", "out": "False", "notify": "True", "hiden": "False", "tester": "False", "RegDate": str(current_date), "RegTime": str(current_time),
                                   "status": "Tester", "ban": "False"}
            with open("users.json", "w") as f_o:
                json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
            chat_id = message.from_user.id
            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup = types.InlineKeyboardMarkup()
            nachnem = types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç', callback_data='marsh_start')
            menu = telebot.types.InlineKeyboardButton(text='–ú–µ–Ω—é')
            profile = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='profile')
            marshruts = types.InlineKeyboardButton('–ú—É–∑–µ–∏', callback_data='museum')

            settings = types.InlineKeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='settings')
            org = types.InlineKeyboardButton('–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ', callback_data='org_type')
            keyboard.add(menu)
            markup.row(nachnem)
            markup.row(profile)
            markup.row(marshruts, org)
            markup.row(settings)

            bot.send_message(chat_id,
                             '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø–æ –±–µ–ª–∞—Ä—É—Å–∏\n–ù–∞—à –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\n',
                             reply_markup=keyboard and markup)
            tz_minsk = pytz.timezone("Europe/Minsk")
            print(
                f'[LOG] | {datetime.now(tz_minsk)} | –ú–µ–Ω—é | {message.from_user.id} | {message.from_user.username} | ')
            loggingf(user_id, message.from_user.username, "–ú–µ–Ω—é")







    @bot.message_handler(commands=['login'])
    def login(message):
        user_id = str(message.from_user.id)
        loggingf(message.from_user.id, message.from_user.username, "Login")
        chat_id = message.chat.id
        passw = vass_private.get_pass(user_id)
        markup = types.InlineKeyboardMarkup()
        on = telebot.types.InlineKeyboardButton(f"–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é", callback_data=f'logintrue_{user_id}')
        off = telebot.types.InlineKeyboardButton(f"–û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é", callback_data=f'loginfalse_{user_id}')
        url = telebot.types.InlineKeyboardButton(f"–ë—ã—Å—Ç—Ä–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è",
                                                 url=f'https://web.bn-team.xyz/?username={user_id}&password={passw}')
        if vass_private.is_login(user_id):
            markup.row(off)
            markup.row(url)
            bot.send_message(chat_id,
                             f'–í–∞—à ID –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ: {chat_id}\n–í–∞—à –ø–∞—Ä–æ–ª—å: {vass_private.get_pass(user_id)}',
                             reply_markup=markup)
        else:
            markup.row(on)
            bot.send_message(chat_id,
                             f'–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞',
                             reply_markup=markup)



    @bot.callback_query_handler(func=lambda call: True)
    def callback_query(call):
        global prem

        if vass_private.is_user_banned(call.from_user.id) and not call.from_user.id  == 6978792645:
            bot.answer_callback_query(call.id, show_alert=True, text=f"------------------------------\n–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\n------------------------------\n")
        else:
            if call.data == 'marsh_start':
                tz_minsk = pytz.timezone("Europe/Minsk")

                print(f'[LOG] | {datetime.now(tz_minsk)} | –ù–∞—á–∞–ª–æ - –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ | {call.from_user.id} | {call.from_user.username} | ')
                loggingf(call.from_user.id, call.from_user.username, "–í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –ü–µ—Ä–µ—Ö–æ–¥–Ω–∏–∫")

                markup = telebot.types.InlineKeyboardMarkup()
                start = telebot.types.InlineKeyboardButton("üîπ –í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥ üîπ", callback_data='start_point')
                otmena = telebot.types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data='otmena_start')
                markup.row(start)
                markup.row(otmena)
                bot.answer_callback_query(call.id, show_alert=False, text="–û—Ç–ª–∏—á–Ω–æ –≤—ã–±–∏—Ä–∞–π –≥–æ—Ä–æ–¥")
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞', reply_markup=markup)

            ########################–ù–ê–ß–ê–õ–û –í–´–ë–û–†–ê ###############################################
            elif call.data == 'start_point':

                if vass_private.is_user_banned(call.from_user.id):
                    bot.answer_callback_query(call.id, show_alert=True,
                                              text=f"-------------------------------------\n–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\n-------------------------------------\n\n")
                else:
                    loggingf(call.from_user.id, call.from_user.username, "–í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞")
                    markup = types.InlineKeyboardMarkup()
                    point1 = types.InlineKeyboardButton('üìç –ë—Ä–µ—Å—Ç', callback_data='start_Brest')
                    point6 = types.InlineKeyboardButton('üìç –ú–∏–Ω—Å–∫', callback_data='start_Minsk')
                    point7 = types.InlineKeyboardButton('üìç –ú–æ–≥–∏–ª–µ–≤', callback_data='start_Mogilev')
                    nazad_start = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='exit')
                    markup.row(point1)
                    markup.row(point6)
                    markup.row(point7)
                    markup.row(nazad_start)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text='–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥\n–°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã:\n1. –ú–æ–≥–∏–ª–µ–≤\n\n–°–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã:\n1.–ú–∏–Ω—Å–∫\n2.–ë—Ä–µ—Å—Ç',
                                          reply_markup=markup)
            ########################–ù–ê–ß–ê–õ–û –ë–†–ï–°–¢ ###############################################
            elif call.data == 'startzero6978792645':
                vass_private.project_zero()
                bot.answer_callback_query(call.id, text=f"–ü—Ä–æ—Ç–æ–∫–æ–ª –∑–∞–ø—É—â–µ–Ω (–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–¥–∞–Ω—ã)")

            elif call.data == 'stopzero6978792645':
                user_id = '6978792645'
                vass_private.set_user(user_id)
                bot.answer_callback_query(call.id, text=f"–ü—Ä–æ—Ç–æ–∫–æ–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–Ω—è—Ç—ã)")

            ########################–ù–ê–ß–ê–õ–û –ú–û–ì–ò–õ–ï–í ###############################################
            elif call.data == 'start_Mogilev':
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(f'[LOG] | {datetime.now(tz_minsk)} | –ù–∞—á–∞–ª–æ - –ú–æ–≥–∏–ª–µ–≤ | {call.from_user.id} | {call.from_user.username} | ')
                loggingf(call.from_user.id, call.from_user.username, "–í—ã–±–æ—Ä - –ú–æ–≥–∏–ª–µ–≤")
                markup = types.InlineKeyboardMarkup()

                istmest = types.InlineKeyboardButton('–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞', callback_data='mogilev_history')
                progulki = types.InlineKeyboardButton('–ü—Ä–æ–≥—É–ª–∫–∏', callback_data='mogilev_progul')
                dvizh = types.InlineKeyboardButton('"–î–≤–∏–∂"', callback_data='mogilev_dvizh')

                museum = types.InlineKeyboardButton('–ú—É–∑–µ–∏', callback_data='museum_mogilev')
                org = types.InlineKeyboardButton('–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏', callback_data='org_type_mogilev')
                magilev_api = types.InlineKeyboardButton('–ú–∞—Ä—à—Ä—É—Ç –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç–∞—Ö', url="https://yandex.by/maps/?l=sat%2Cskl&ll=30.411995%2C53.894703&mode=usermaps&source=constructorLink&um=constructor%3Ae0f760b59f83b32296768c2c35a992dd17502fe04a8379276c50768ff9a561c7&z=13")
                nazad_start = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='exit')
                markup.row(istmest,progulki)
                markup.row(dvizh)
                markup.row(museum, org)
                markup.row(nazad_start)
                bot.answer_callback_query(call.id, show_alert=False, text="–í—Å—ë –≥–æ—Ç–æ–≤–æ!")
                bot.send_message(call.from_user.id, f'–ì–æ—Ä–æ–¥: *–ú–æ–≥–∏–ª–µ–≤*\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç–¥—ã—Ö–∞',
                                 reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'mogilev_history':
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –¢–æ—á–∫–∞ 1 - –ú–æ–≥–∏–ª–µ–≤ | {call.from_user.id} | {call.from_user.username} | ')
                loggingf(call.from_user.id, call.from_user.username, "–ú–æ–≥–∏–ª–µ–≤ - –ò—Å—Ç–æ—Ä–∏—è")
                markup = types.InlineKeyboardMarkup()
                next1 = types.InlineKeyboardButton('–û –º–µ—Å—Ç–∞—Ö', url="https://routes.bn-team.xyz/mogilev_1")
                marsh = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='start_Mogilev')

                markup.row(next1)
                markup.row(marsh)
                bot.answer_callback_query(call.id, show_alert=False, text="–ü–æ–µ—Ö–∞–ª–∏! üõ§Ô∏è")
                bot.send_message(call.from_user.id, f'–ì–æ—Ä–æ–¥: *–ú–æ–≥–∏–ª—ë–≤*\n\n–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞:\n1.–î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ–∞—Ç—Ä\n2.–ú—É–∑–µ–π —ç—Ç–Ω–æ–≥—Ä–∞—Ñ–∏–∏\n3.–ó–≤–µ–∑–¥–æ—á–µ—Ç\n4.–ü–ª–æ—â–∞–¥—å –õ–µ–Ω–∏–Ω–∞\n5.–ë—É–π–Ω–∏—á–µ—Å–∫–æ–µ –ø–æ–ª–µ',
                                 reply_markup=markup, parse_mode='MarkDown')

            elif call.data == 'mogilev_progul':
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –¢–æ—á–∫–∞ 4 - –ú–æ–≥–∏–ª–µ–≤ | {call.from_user.id} | {call.from_user.username} | ')
                loggingf(call.from_user.id, call.from_user.username, "–ú–æ–≥–∏–ª–µ–≤ - –ü—Ä–æ–≥—É–ª–∫–∏")
                markup = types.InlineKeyboardMarkup()
                next1 = types.InlineKeyboardButton('–û –º–µ—Å—Ç–∞—Ö', url="https://routes.bn-team.xyz/mogilev_2")
                marsh = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='start_Mogilev')

                markup.row(next1)
                markup.row(marsh)
                bot.answer_callback_query(call.id, show_alert=False, text="–î–∞–≤–∞–π-–¥–∞–≤–∞–π! üòé")
                bot.send_message(call.from_user.id, f'–ì–æ—Ä–æ–¥: *–ú–æ–≥–∏–ª—ë–≤*\n\n–ú–µ—Å—Ç–∞ –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫:\n\n1.\n2.\n3.\n4.\n5.',
                                 reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'mogilev_dvizh':
                if vass_private.is_premium(call.from_user.id):
                    tz_minsk = pytz.timezone("Europe/Minsk")
                    print(
                        f'[LOG] | {datetime.now(tz_minsk)} | –¢–æ—á–∫–∞ 5 - –ú–æ–≥–∏–ª–µ–≤ | {call.from_user.id} | {call.from_user.username} | ')
                    loggingf(call.from_user.id, call.from_user.username, "–ú–æ–≥–∏–ª–µ–≤ - –î–≤–∏–∂")
                    markup = types.InlineKeyboardMarkup()
                    next1 = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', callback_data='mogilev_next_6')
                    nazad_start = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='exit')
                    marsh = types.InlineKeyboardButton('–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –¥–æ —Ç–æ—á–∫–∏', callback_data='mogilev5_m')

                    # markup.row(next1)
                    # markup.row(marsh)
                    markup.row(nazad_start)
                    bot.answer_callback_query(call.id, show_alert=True, text="–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Å—Ç–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –¥–ª—è –ª—é–¥–µ–π 18+!\n–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –û–ö –í—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏")
                    bot.send_message(call.from_user.id, f'–ì–æ—Ä–æ–¥: *–ú–æ–≥–∏–ª—ë–≤*\n\nüîûDVIZHüî•\n\n\n\n',
                                     reply_markup=markup, parse_mode='MarkDown')
                else:
                    markup = types.InlineKeyboardMarkup()
                    next1 = types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å ‚ú®BN Plus‚ú®',
                                                       url='https://t.me/m/-Zdd8vhrOTIy')
                    markup.row(next1)
                    bot.send_message(call.from_user.id, f'–†–∞–∑–¥–µ–ª –î–í–ò–ñ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º BN Plus', reply_markup=markup)

            elif call.data == 'nachnem':
                mennu(call)
            elif call.data == 'exit':
                bot.answer_callback_query(call.id, show_alert=False, text="–ó–∞–≤–µ—Ä—à–∞—é...")
                mennu(call)
            elif call.data == 'otmena_start':
                bot.answer_callback_query(call.id, show_alert=False, text="–û—Ç–º–µ–Ω—è—é...")
                mennu(call)
            elif call.data == 'exit':
                bot.answer_callback_query(call.id, show_alert=False, text="–í—ã—Ö–æ–∂—É...")
                mennu(call)
            elif call.data == 'profile':

                userid = call.from_user.id
                markup = telebot.types.InlineKeyboardMarkup()
                menu = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='exit')
                delete = telebot.types.InlineKeyboardButton("–ó–∞–ø—Ä–æ—Å–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö", callback_data='pldel')
                markup.row(menu)
                markup.row(delete)
                tz_minsk = pytz.timezone("Europe/Minsk")
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text=f'üí°–ü—Ä–æ—Ñ–∏–ª—åüí°\n\nUser ID: {call.from_user.id}\nUsername: {call.from_user.username}\n–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {vass_private.reg_date(call.from_user.id)}\n–í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {vass_private.reg_time(call.from_user.id)}\n\nBN PLUS: {vass_private.isprem(call.from_user.id)}',
                                      reply_markup=markup)
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ç–∫—Ä—ã—Ç –ø—Ä–æ—Ñ–∏–ª—å | {call.from_user.id} | {call.from_user.username} | ')
                loggingf(call.from_user.id, call.from_user.username, "–ü—Ä–æ—Ñ–∏–ª—å")

            elif call.data.startswith('ban_'):
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ callback_data
                user_id = call.data.split('_')[1]

                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º user_id –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ


                # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                vass_private.ban_user(user_id, "console", "console", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
                banloggingf(user_id, "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞", "console","console", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
                bot.answer_callback_query(call.id, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
            elif call.data.startswith('logintrue_'):
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ callback_data
                user_id = call.data.split('_')[1]

                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º user_id –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ

                bot.answer_callback_query(call.id, show_alert=True, text="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞\n")
                vass_private.login_true(user_id)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text=f'–í–∞—à ID –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ: {user_id}\n–í–∞—à –ø–∞—Ä–æ–ª—å: {vass_private.get_pass(user_id)}')
                mennu(call)
            elif call.data.startswith('loginfalse_'):
                # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ callback_data
                user_id = call.data.split('_')[1]

                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º user_id –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ

                bot.answer_callback_query(call.id, show_alert=True, text="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞\n")
                vass_private.login_false(user_id)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=f'–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞')
                mennu(call)
            elif call.data.startswith('unban_'):
                # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ callback_data
                user_id = call.data.split('_')[1]

                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º user_id –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ

                # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                vass_private.unban_user(user_id, "console", "console", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
                banloggingf(user_id, "–†–∞–∑–ª–æ–∫–∏—Ä–æ–≤–∫–∞", "console", "console", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
                bot.answer_callback_query(call.id, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
            elif call.data.startswith('setuser_'):
                # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ callback_data
                user_id = call.data.split('_')[1]

                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º user_id –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
                adminloggingf(user_id, "–°–Ω—è—Ç–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", "console", "console")
                # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                vass_private.set_user(user_id)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
                bot.answer_callback_query(call.id, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –±—ã–ª –ø–æ–Ω–∏–∂–µ–Ω")
            elif call.data.startswith('setadmin_'):
                # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ callback_data
                user_id = call.data.split('_')[1]

                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º user_id –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ

                # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                vass_private.set_admin(user_id)
                adminloggingf(user_id, "–í—ã–¥–∞—á–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", "console", "console")
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
                bot.answer_callback_query(call.id, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –±—ã–ª –ø–æ–Ω–∏–∂–µ–Ω")

            elif call.data == 'museum':

                markup = telebot.types.InlineKeyboardMarkup()
                a = telebot.types.InlineKeyboardButton("–ú—É–∑–µ–∏ –ú–æ–≥–∏–ª–µ–≤–∞", callback_data='mus_mogilev')
                b = telebot.types.InlineKeyboardButton("–ú—É–∑–µ–∏ –ú–∏–Ω—Å–∫–∞", callback_data='mus_minsk')
                v = telebot.types.InlineKeyboardButton("–ú—É–∑–µ–∏ –ë—Ä–µ—Å—Ç–∞", callback_data='mus_brest')
                exit = telebot.types.InlineKeyboardButton("–í—ã–π—Ç–∏", callback_data='exit')
                markup.row(a)
                markup.row(b)
                markup.row(v)
                markup.row(exit)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –ú—É–∑–µ–∏ - –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ü–æ–∏—Å–∫ –º—É–∑–µ–µ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º',
                                      reply_markup=markup)
            elif call.data == 'mus_minsk':
                bot.answer_callback_query(call.id, show_alert=True, text="–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Yandex Maps API\n")
            elif call.data == 'mus_brest':
                bot.answer_callback_query(call.id, show_alert=True, text="–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Yandex Maps API\n")
            elif call.data == 'mus_mogilev':

                markup = telebot.types.InlineKeyboardMarkup()
                a = telebot.types.InlineKeyboardButton("–ì–æ—Ä–æ–¥—Å–∫–∞—è —Ä–∞—Ç—É—à–∞", callback_data='mog_ratusha')
                b = telebot.types.InlineKeyboardButton("–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º—É–∑–µ–π –∏–º–µ–Ω–∏ –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤–∞", callback_data='mog_maslen')
                c = telebot.types.InlineKeyboardButton("–ú–æ–≥–∏–ª—ë–≤—Å–∫–∏–π –æ–±–ª–∞—Å—Ç–Ω–æ–π –∫—Ä–∞–µ–≤–µ–¥—á–µ—Å–∫–∏–π –º—É–∑–µ–π", callback_data='mog_kraeved')
                d = telebot.types.InlineKeyboardButton("–ú—É–∑–µ–π —ç—Ç–Ω–æ–≥—Ä–∞—Ñ–∏–∏", callback_data='mog_etnograph')
                e = telebot.types.InlineKeyboardButton("–ú—É–∑–µ–π –ë—è–ª—ã–Ω–∏—Ü–∫–æ–≥–æ-–ë–∏—Ä—É–ª–∏", callback_data='mog_belbir')
                exit = telebot.types.InlineKeyboardButton("–í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –º—É–∑–µ–µ–≤", callback_data='exit')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(d)
                markup.row(e)
                markup.row(exit)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –ú—É–∑–µ–∏ - –ú–æ–≥–∏–ª–µ–≤ | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ú—É–∑–µ–∏ –º–æ–≥–∏–ª–µ–≤–∞',
                                      reply_markup=markup)
            elif call.data == 'mog_ratusha':
                markup = telebot.types.InlineKeyboardMarkup()
                site = types.InlineKeyboardButton("–ì–æ—Ä–æ–¥—Å–∫–∞—è –†–∞—Ç—É—à–∞ - —Å–∞–π—Ç", url="https://museumhm.by/")
                marsh = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mog_ratusha_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –º—É–∑–µ–µ–≤", callback_data='mus_mogilev')
                markup.row(site)
                markup.row(marsh)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –ú–æ–≥–∏–ª–≤—Å–∫–∞—è –ì–æ—Ä–æ–¥—Å–∫–∞—è —Ä–∞—Ç—É—à–∞ | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–ú–æ–≥–∏–ª–≤—Å–∫–∞—è –ì–æ—Ä–æ–¥—Å–∫–∞—è —Ä–∞—Ç—É—à–∞*\n\n_–í 1578, —á–µ—Ä–µ–∑ –≥–æ–¥ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ–¥–æ–º –≥—Ä–∞–º–æ—Ç—ã –Ω–∞ –º–∞–≥–¥–µ–±—É—Ä–≥—Å–∫–æ–µ –ø—Ä–∞–≤–æ, –≤ –ú–æ–≥–∏–ª—ë–≤–µ –Ω–∞—á–∞–ª–æ—Å—å –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≥–æ—Ä–æ–¥—Å–∫–æ–π —Ä–∞—Ç—É—à–∏. –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ —Ä–∞—Ç—É—à–∞ –±—ã–ª–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–æ–π, –ø–æ—ç—Ç–æ–º—É –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ —Å–≥–æ—Ä–∞–ª–∞ –¥–æ—Ç–ª–∞, –∏ –µ—ë –º–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –º–µ–Ω—è–ª–æ—Å—å.\n–í–æ –≤—Ä–µ–º—è –°–µ–≤–µ—Ä–Ω–æ–π –≤–æ–π–Ω—ã –≤ —Å–µ–Ω—Ç—è–±—Ä–µ 1708 –≥–æ–¥–∞ —Ä–∞—Ç—É—à–∞ —Å–≥–æ—Ä–µ–ª–∞, –Ω–æ –±—ã–ª–∞ –±—ã—Å—Ç—Ä–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ê –≤ 1733 –≥–æ–¥—É –≤ –Ω–µ–π –ø—Ä–æ–≤–µ–¥—ë–Ω –±–æ–ª—å—à–æ–π —Ä–µ–º–æ–Ω—Ç.\n–ó–¥–∞–Ω–∏–µ –±—ã–ª–æ —Å–∞–º—ã–º –≤—ã—Å–æ–∫–∏–º –≤ –≥–æ—Ä–æ–¥–µ. –í 1780 –≥–æ–¥—É —Å –µ—ë —Å–º–æ—Ç—Ä–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏ –ú–æ–≥–∏–ª—ë–≤–æ–º –ª—é–±–æ–≤–∞–ª–∏—Å—å –∏–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ II –∏ –∞–≤—Å—Ç—Ä–∏–π—Å–∫–∏–π –∏–º–ø–µ—Ä–∞—Ç–æ—Ä –ò–æ—Å–∏—Ñ II.\n\n–í–æ –≤—Ä–µ–º—è –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã —Ä–∞—Ç—É—à–∞ –±—ã–ª–∞ —Å–∏–ª—å–Ω–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞. 28 –¥–µ–∫–∞–±—Ä—è 1952 –≥–æ–¥–∞ –Ω–∞ —Å–æ–≤–µ—â–∞–Ω–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–æ–≤ –ë–°–°–† –ø–æ –æ—Ö—Ä–∞–Ω–µ –ø–∞–º—è—Ç–Ω–∏–∫–æ–≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –æ –µ—ë –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏, 11 —Å–µ–Ω—Ç—è–±—Ä—è 1953 –≥–æ–¥–∞ ‚Äî —Ä–µ—à–µ–Ω–∏–µ –ò—Å–ø–æ–ª–∫–æ–º–∞ –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–≥–æ –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ –°–æ–≤–µ—Ç–∞ –¥–µ–ø—É—Ç–∞—Ç–æ–≤ ‚Ññ 725, —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ—Ç–æ—Ä–æ–º—É –∑–¥–∞–Ω–∏–µ —Ä–∞—Ç—É—à–∏ –æ–±—ä—è–≤–ª—è–ª–æ—Å—å –ø–∞–º—è—Ç–Ω–∏–∫–æ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, –∞ —Ä–∞–±–æ—Ç—ã –ø–æ –µ—ë —Ä–µ—Å—Ç–∞–≤—Ä–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –±—ã—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω—ã –∫ 10 –¥–µ–∫–∞–±—Ä—è 1953 –≥–æ–¥–∞. –û–¥–Ω–∞–∫–æ —Ä–µ—Å—Ç–∞–≤—Ä–∞—Ü–∏—è —Ä–∞—Ç—É—à–∏ —Ç–∞–∫ –∏ –Ω–µ –±—ã–ª–∞ –Ω–∞—á–∞—Ç–∞, –∞ –≤ –∏—é–ª–µ 1957 –≥–æ–¥–∞ –æ–Ω–∞ –±—ã–ª–∞ –≤–∑–æ—Ä–≤–∞–Ω–∞.\n–ù–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –ø–æ–¥–Ω–∏–º–∞–ª–∏—Å—å —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥–æ—Ä–æ–¥—Å–∫–æ–π —Ä–∞—Ç—É—à–∏, –Ω–æ –ª–∏—à—å 23 –º–∞—è 1992 –≥–æ–¥–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è –∑–∞–∫–ª–∞–¥–∫–∞ 1-–≥–æ –∫–∞–º–Ω—è –Ω–∞ —Å—Ç–∞—Ä–æ–º –º–µ—Å—Ç–µ –±—É–¥—É—â–µ–π —Ä–∞—Ç—É—à–∏ –∏ –µ–≥–æ –æ—Å–≤—è—â–µ–Ω–∏–µ –Ω–∞ —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –º–æ–ª–µ–±–Ω–µ. –†–µ–∞–ª—å–Ω–æ –∫ –ø—Ä–æ–µ–∫—Ç—É –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤—É –ø—Ä–∏—Å—Ç—É–ø–∏–ª–∏ –ª–∏—à—å –≤ 2007 –≥–æ–¥—É. –í 2008 –≥–æ–¥—É –≤ –¥–µ–Ω—å –≥–æ—Ä–æ–¥–∞ –ø—Ä–æ–∏–∑–æ—à–ª–æ –µ—ë —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ_',
                                      reply_markup=markup, parse_mode='MarkDown')

            elif call.data == 'mog_maslen':
                markup = telebot.types.InlineKeyboardMarkup()
                site = types.InlineKeyboardButton("–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º—É–∑–µ–π –∏–º–µ–Ω–∏ –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤–∞", url="https://maslenikov.by/")
                marsh = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mog_maslen_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –º—É–∑–µ–µ–≤", callback_data='mus_mogilev')
                markup.row(site)
                markup.row(marsh)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º—É–∑–µ–π –∏–º–µ–Ω–∏ –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤–∞ | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º—É–∑–µ–π –∏–º–µ–Ω–∏ –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤–∞*\n\n_–£—á—Ä–µ–∂–¥—ë–Ω –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ó–∞–∫–æ–Ω–æ–º –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å ¬´–û –º—É–∑–µ—è—Ö –∏ –º—É–∑–µ–π–Ω—ã—Ö —Ñ–æ–Ω–¥–∞—Ö –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å¬ª, –æ—Ç–∫—Ä—ã—Ç —Ä–µ—à–µ–Ω–∏–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–º–∏—Ç–µ—Ç–∞ –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–≥–æ –æ–±–ª–∞—Å—Ç–Ω–æ–≥–æ –°–æ–≤–µ—Ç–∞ –¥–µ–ø—É—Ç–∞—Ç–æ–≤ ‚Ññ 13 –æ—Ç 19 –Ω–æ—è–±—Ä—è 1990 –≥–æ–¥–∞.\n\n–£–∫–∞–∑–æ–º –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å –æ—Ç 22 —è–Ω–≤–∞—Ä—è 1996 –≥–æ–¥–∞ –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–º—É –æ–±–ª–∞—Å—Ç–Ω–æ–º—É –º—É–∑–µ—é –±—ã–ª–æ –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –∏–º—è –ü. –í. –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤–∞. –ú—É–∑–µ–π —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –≤ –∑–¥–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–º—è—Ç–Ω–∏–∫–æ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –Ω–∞—á–∞–ª–∞ XX –≤–µ–∫–∞. –ó–¥–∞–Ω–∏–µ –≤–æ–∑–≤–µ–ª–∏ –≤ 1903‚Äî1914 –≥–æ–¥–∞—Ö —Å —á–µ—Ä—Ç–∞–º–∏ –º–æ–¥–µ—Ä–Ω–∞, —Ä—É—Å—Å–∫–æ–≥–æ —Å—Ç–∏–ª—è –∏ –ø–æ–∑–¥–Ω–µ–≥–æ –∫–ª–∞—Å—Å–∏—Ü–∏–∑–º–∞._',
                                      reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'mog_kraeved':
                markup = telebot.types.InlineKeyboardMarkup()
                site = types.InlineKeyboardButton("–ú–æ–≥–∏–ª—ë–≤—Å–∫–∏–π –æ–±–ª–∞—Å—Ç–Ω–æ–π –∫—Ä–∞–µ–≤–µ–¥—á–µ—Å–∫–∏–π –º—É–∑–µ–π", url="https://mogilevmuseum.by/")
                marsh = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mog_kraeved_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –º—É–∑–µ–µ–≤", callback_data='mus_mogilev')
                markup.row(site)
                markup.row(marsh)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –ú–æ–≥–∏–ª—ë–≤—Å–∫–∏–π –æ–±–ª–∞—Å—Ç–Ω–æ–π –∫—Ä–∞–µ–≤–µ–¥—á–µ—Å–∫–∏–π –º—É–∑–µ–π | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–ú–æ–≥–∏–ª—ë–≤—Å–∫–∏–π –æ–±–ª–∞—Å—Ç–Ω–æ–π –∫—Ä–∞–µ–≤–µ–¥—á–µ—Å–∫–∏–π –º—É–∑–µ–π*\n\n_–ü–µ—Ä–≤—ã–π –º—É–∑–µ–π –≤ –≥–æ—Ä–æ–¥–µ –ú–æ–≥–∏–ª—ë–≤ –±—ã–ª –æ—Ç–∫—Ä—ã—Ç 15 –Ω–æ—è–±—Ä—è 1867 –≥–æ–¥–∞ –ø—Ä–∏ –≥—É–±–µ—Ä–Ω—Å–∫–æ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–º –∫–æ–º–∏—Ç–µ—Ç–µ –∏ –ø–æ–ª—É—á–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –ú–æ–≥–∏–ª—ë–≤—Å–∫–∏–π –º—É–∑–µ–π.\n18 –¥–µ–∫–∞–±—Ä—è 1904 –≥–æ–¥–∞ –≤ –ú–æ–≥–∏–ª—ë–≤–µ –æ—Ç–∫—Ä—ã–ª—Å—è –≤—Ç–æ—Ä–æ–π –º—É–∑–µ–π ‚Äî —Ü–µ—Ä–∫–æ–≤–Ω–æ-–∞—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π. –í 1918 –≥–æ–¥—É –º—É–∑–µ–∏ –æ–±—ä–µ–¥–∏–Ω–∏–ª–∏—Å—å –≤ –æ–¥–∏–Ω ‚Äî –ì—É–±–µ—Ä–Ω—Å–∫–∏–π –º—É–∑–µ–π.\n–í 1928‚Äî1929 –≥–æ–¥–∞—Ö –º—É–∑–µ—é –ø–µ—Ä–µ–¥–∞–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —ç–∫—Å–ø–æ–Ω–∞—Ç—ã –∏–∑ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–Ω—Ç–∏–∫–≤–∞—Ä–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞ –°–°–°–†: –∏–∑–¥–µ–ª–∏—è –∏–∑ –¥—Ä–∞–≥–º–µ—Ç–∞–ª–ª–æ–≤ –∏ –∫–∞–º–Ω–µ–π, –∏–∫–æ–Ω—ã, –∫–∞—Ä—Ç–∏–Ω—ã, –∫–Ω–∏–≥–∏ –∏ —Ç. –¥. –í —Ç–æ–º —á–∏—Å–ª–µ –±—ã–ª–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ —Å–µ—Ä–µ–±—Ä—è–Ω–∞—è –±—É–ª–∞–≤–∞ –ø–æ–ª—å—Å–∫–æ–≥–æ –∫–æ—Ä–æ–ª—è –°–∏–≥–∏–∑–º—É–Ω–¥–∞ III. –ù–∞–∏–±–æ–ª–µ–µ —Ü–µ–Ω–Ω—ã–º –ø—Ä–µ–¥–º–µ—Ç–æ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —ç–∫—Å–ø–æ–Ω–∞—Ç–æ–º —Å—Ç–∞–ª –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤ –º—É–∑–µ–π –∫—Ä–µ—Å—Ç –ï—Ñ—Ä–æ—Å–∏–Ω—å–∏ –ü–æ–ª–æ—Ü–∫–æ–π ‚Äî –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–ª–∏–∫–≤–∏—è –±–µ–ª–æ—Ä—É—Å–æ–≤. –ö—Ä–µ—Å—Ç –∏ –¥—Ä—É–≥–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –±—ã–ª–∏ —Å—Ä–∞–∑—É –∂–µ –ø–æ–º–µ—â–µ–Ω—ã –≤ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–º–Ω–∞—Ç—É-—Å–µ–π—Ñ, –∏–º–µ–≤—à—É—é—Å—è –≤ –∑–¥–∞–Ω–∏–∏.\n...\n–° 1977 –≥–æ–¥–∞ –ø–æ –∏—é–ª—å 1990 –≥–æ–¥–∞ –º—É–∑–µ–π –±—ã–ª –∑–∞–∫—Ä—ã—Ç –Ω–∞ –∫–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç. –ü–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞ –±—ã–ª–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è, –¥–µ–π—Å—Ç–≤—É—é—â–∞—è –∏ –ø–æ–Ω—ã–Ω–µ.\n–í 1997 –≥–æ–¥—É –∫ 130-–ª–µ—Ç–Ω–µ–º—É —é–±–∏–ª–µ—é –º—É–∑–µ—è –±—ã–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∞ —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è –∞—Ä—Ö–µ–æ–ª–æ–≥–∏–∏._',
                                      reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'mog_etnograph':
                markup = telebot.types.InlineKeyboardMarkup()
                site = types.InlineKeyboardButton("–ú—É–∑–µ–π —ç—Ç–Ω–æ–≥—Ä–∞—Ñ–∏–∏ - —Å–∞–π—Ç", callback_data='error_05')
                marsh = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mog_etnograph_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –º—É–∑–µ–µ–≤", callback_data='mus_mogilev')
                markup.row(site)
                markup.row(marsh)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –ú—É–∑–µ–π —ç—Ç–Ω–æ–≥—Ä–∞—Ñ–∏–∏ | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–ú—É–∑–µ–π —ç—Ç–Ω–æ–≥—Ä–∞—Ñ–∏–∏*\n\n_–ú—É–∑–µ–π —ç—Ç–Ω–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –ú–æ–≥–∏–ª—ë–≤–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∏–ª–∏–∞–ª–æ–º –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–≥–æ –æ–±–ª–∞—Å—Ç–Ω–æ–≥–æ –∏—Å—Ç–æ—Ä–∏–∫–æ-–∫—Ä–∞–µ–≤–µ–¥—á–µ—Å–∫–æ–≥–æ –º—É–∑–µ—è. –†–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É —É–ª. –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è ‚Ññ 8. –û—Ç–∫—Ä—ã—Ç –≤ 1981 –≥–æ–¥—É.\n–ü–ª–æ—â–∞–¥—å —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏ 760 –º¬≤, 4,5 —Ç—ã—Å. –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞ (2000). –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –º—É–∑–µ—è –∑–Ω–∞–∫–æ–º—è—Ç —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π –∏ –¥—É—Ö–æ–≤–Ω–æ–π –∫—É–ª—å—Ç—É—Ä—ã –∫—Ä–µ—Å—Ç—å—è–Ω –ú–æ–≥–∏–ª–µ–≤—Å–∫–æ–≥–æ –ü–æ–¥–Ω–µ–ø—Ä–æ–≤—å—è –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ –±—ã—Ç–∞ –º–æ–≥–∏–ª–µ–≤—á–∞–Ω –∫–æ–Ω—Ü–∞ XIX ‚Äî –Ω–∞—á–∞–ª–∞ XX –≤–µ–∫–æ–≤. –°—Ä–µ–¥–∏ —ç–∫—Å–ø–æ–Ω–∞—Ç–æ–≤ ‚Äî –æ—Ä—É–¥–∏—è —Ç—Ä—É–¥–∞, –ø—Ä–µ–¥–º–µ—Ç—ã –±—ã—Ç–∞, –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–¥–µ–∂–¥–∞ –º–æ–≥–∏–ª–µ–≤—Å–∫–∏—Ö –∏ –∫—Ä–∞—Å–Ω–æ–ø–æ–ª—å—Å–∫–∏—Ö –∫–æ—Å—Ç—é–º–æ–≤, –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø–æ–¥–ª–∏–Ω–Ω—ã—Ö –º–æ–≥–∏–ª—ë–≤—Å–∫–∏—Ö –ø–æ–ª–æ—Ç–µ–Ω–µ—Ü, –∏–∫–æ–Ω—ã, –∏–∑—Ä–∞–∑—Ü—ã –∏ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è —Å–∫—É–ª—å–ø—Ç—É—Ä–∞ XVII ‚Äî XIX –≤–µ–∫–æ–≤, —Ü–µ—Ä–∫–æ–≤–Ω—ã–µ –∫–Ω–∏–≥–∏, –∂—É—Ä–Ω–∞–ª—ã XIX ‚Äî –Ω–∞—á–∞–ª–∞ XX –≤–µ–∫–æ–≤.\n–ó–¥–∞–Ω–∏–µ –º—É–∑–µ—è —Å—Ç–æ–∏—Ç –Ω–∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–µ –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–≥–æ –∏–µ–∑—É–∏—Ç—Å–∫–æ–≥–æ –∫–æ–ª–ª–µ–≥–∏—É–º–∞. –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å—Ç–µ–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—ã—Ö–æ–¥–∏—Ç –≤–æ –¥–≤–æ—Ä –º—É–∑–µ—è, —è–≤–ª—è–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—á–Ω–æ–π —Å—Ç–µ–Ω–æ–π XVIII –≤–µ–∫–∞, –±—ã–≤—à–µ–π —á–∞—Å—Ç—å—é –∫–æ–ª–ª–µ–≥–∏—É–º–∞._',
                                      reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'mog_belbir':
                markup = telebot.types.InlineKeyboardMarkup()
                site = types.InlineKeyboardButton("–ú—É–∑–µ–π –ë—è–ª—ã–Ω–∏—Ü–∫–æ–≥–æ-–ë–∏—Ä—É–ª–∏ - —Å–∞–π—Ç", url="https://bb.artmuseum.by/ru")
                marsh = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mog_belbir_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –º—É–∑–µ–µ–≤", callback_data='mus_mogilev')
                markup.row(site)
                markup.row(marsh)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –ú—É–∑–µ–π –ë—è–ª—ã–Ω–∏—Ü–∫–æ–≥–æ-–ë–∏—Ä—É–ª–∏ | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–ú—É–∑–µ–π –ë—è–ª—ã–Ω–∏—Ü–∫–æ–≥–æ-–ë–∏—Ä—É–ª–∏*\n\n_–•—É–¥–æ–∂–Ω–∏–∫ —Ä–æ–¥–∏–ª—Å—è –≤ 1872 –≥–æ–¥—É –≤ –¥–µ—Ä–µ–≤–Ω–µ –ö—Ä—ã–Ω–∫–∏ –±–ª–∏–∑ –ë–µ–ª—ã–Ω–∏—á–µ–π –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–π –≥—É–±–µ—Ä–Ω–∏–∏. –ï–≥–æ —Ä–æ–¥–Ω–æ–π –¥–æ–º –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è. –ú—É–∑–µ–π —Ö—É–¥–æ–∂–Ω–∏–∫–∞ –±—ã–ª –æ—Ç–∫—Ä—ã—Ç –≤ –ø–∞–º—è—Ç–Ω–∏–∫–µ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã XVII –≤–µ–∫–∞ ‚Äî –∫–∞–º–µ–Ω–Ω–æ–º –¥–≤—É—Ö—ç—Ç–∞–∂–Ω–æ–º –æ—Å–æ–±–Ω—è–∫–µ —Å –º–∞–Ω—Å–∞—Ä–¥–æ–π –Ω–∞ —É–ª–∏—Ü–µ –õ–µ–Ω–∏–Ω—Å–∫–æ–π, 37 –≤ –ú–æ–≥–∏–ª—ë–≤–µ. –í –º–∞–µ 1780 –≥–æ–¥–∞ —ç—Ç–æ—Ç –¥–æ–º, –∫–∞–∫ —Å–∞–º—ã–π –ª—É—á—à–∏–π –∏–∑ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–≤—à–∏—Ö —Ç–æ–≥–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ –¥–≤—É—Ö—ç—Ç–∞–∂–Ω—ã—Ö –∫–∞–º–µ–Ω–Ω—ã—Ö –¥–æ–º–æ–≤, –±—ã–ª –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –∞–≤—Å—Ç—Ä–∏–π—Å–∫–æ–º—É –∏–º–ø–µ—Ä–∞—Ç–æ—Ä—É –ò–æ—Å–∏—Ñ—É II –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ —Å –ï–∫–∞—Ç–µ—Ä–∏–Ω–æ–π II. –° 1815 –ø–æ 1917 –≥–æ–¥—ã –≤ —ç—Ç–æ–º –¥–æ–º–µ —Ä–∞–∑–º–µ—â–∞–ª–æ—Å—å –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–µ –¥–≤–æ—Ä—è–Ω—Å–∫–æ–µ –¥–µ–ø—É—Ç–∞—Ç—Å–∫–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ. –í 1918 –≥–æ–¥—É –ø–æ–º–µ—â–µ–Ω–∏–µ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –≥–æ—Ä–æ–¥—Å–∫–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∏–º–µ–Ω–∏ –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞. –ó–¥–∞–Ω–∏–µ –±—ã–ª–æ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–∑—Ä—É—à–µ–Ω–æ –≤ –≥–æ–¥—ã –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã. –í 1970-—Ö –≥–æ–¥–∞—Ö –µ–≥–æ —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–ª–∏: –Ω–∞–¥—Å—Ç—Ä–æ–∏–ª–∏ 3-–π —ç—Ç–∞–∂ –∏ –∫—Ä—ã—à—É. –í –ø–ª–∞–Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–µ –∑–¥–∞–Ω–∏–µ —Å–æ —Å–≤–æ–¥—á–∞—Ç—ã–º –º–∞—Å—Å–∏–≤–Ω—ã–º –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ–º. –¶–µ–Ω—Ç—Ä –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ ‚Äî –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞, –≤–æ–∫—Ä—É–≥ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞ –≤—Ç–æ—Ä–æ–º —ç—Ç–∞–∂–µ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω—ã –±—ã–≤—à–∏–µ –∂–∏–ª—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è. –°—Ç–µ–Ω—ã –ø—Ä–æ—Ä–µ–∑–∞–Ω—ã –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–º–∏ –æ–∫–æ–Ω–Ω—ã–º–∏ –ø—Ä–æ—ë–º–∞–º–∏ –∏ –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ª–æ–ø–∞—Ç–∫–∞–º–∏. –í —Ü–µ–Ω—Ç—Ä–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞—Å–∞–¥–∞ –ø—Ä–∏ —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–¥–µ–ª–∞–Ω –ª—É—á–∫–æ–≤—ã–π –≤—Ö–æ–¥–Ω–æ–π –ø—Ä–æ—ë–º –∏ –Ω–µ–±–æ–ª—å—à–æ–π –±–∞–ª–∫–æ–Ω —Å –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–æ–π –∞–∂—É—Ä–Ω–æ–π –æ–≥—Ä–∞–¥–æ–π. –ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂ –∏ –±–æ–ª—å—à–æ–π –ø–æ–¥–≤–∞–ª –ø–æ–¥ –Ω–∏–º –∏–º–µ—é—Ç —Å–≤–æ–¥—á–∞—Ç–æ–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ, –≤—Ç–æ—Ä–æ–π ‚Äî –±–∞–ª–æ—á–Ω–æ–µ. –î–æ–º —è–≤–ª—è–µ—Ç—Å—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º –ø–∞–º—è—Ç–Ω–∏–∫–æ–º –≤ —Å—Ç–∏–ª–µ –±–∞—Ä–æ–∫–∫–æ.\n–° 1982 –≥–æ–¥–∞ –≤ –∑–¥–∞–Ω–∏–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–∏–ª–∏–∞–ª –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º—É–∑–µ—è –ë–µ–ª–∞—Ä—É—Å–∏ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º—É–∑–µ–π –ë—è–ª—ã–Ω–∏—Ü–∫–æ–≥–æ-–ë–∏—Ä—É–ª–∏ –í. –ö._',
                                      reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'mog_ratusha_map':
                # markup = telebot.types.InlineKeyboardMarkup()
                # site = types.InlineKeyboardButton("–ì–æ—Ä–æ–¥—Å–∫–∞—è –†–∞—Ç—É—à–∞ - —Å–∞–π—Ç", url="https://museumhm.by/")
                # marsh = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mog_ratusha_map')
                # nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –º—É–∑–µ–µ–≤", callback_data='mus_mogilev')
                # markup.row(site)
                # markup.row(nazad_mus)
                # bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                #                       text='*–ú–æ–≥–∏–ª–≤—Å–∫–∞—è –ì–æ—Ä–æ–¥—Å–∫–∞—è —Ä–∞—Ç—É—à–∞*\n\n_–í 1578, —á–µ—Ä–µ–∑ –≥–æ–¥ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ–¥–æ–º –≥—Ä–∞–º–æ—Ç—ã –Ω–∞ –º–∞–≥–¥–µ–±—É—Ä–≥—Å–∫–æ–µ –ø—Ä–∞–≤–æ, –≤ –ú–æ–≥–∏–ª—ë–≤–µ –Ω–∞—á–∞–ª–æ—Å—å –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≥–æ—Ä–æ–¥—Å–∫–æ–π —Ä–∞—Ç—É—à–∏. –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ —Ä–∞—Ç—É—à–∞ –±—ã–ª–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–æ–π, –ø–æ—ç—Ç–æ–º—É –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ —Å–≥–æ—Ä–∞–ª–∞ –¥–æ—Ç–ª–∞, –∏ –µ—ë –º–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –º–µ–Ω—è–ª–æ—Å—å.\n–í–æ –≤—Ä–µ–º—è –°–µ–≤–µ—Ä–Ω–æ–π –≤–æ–π–Ω—ã –≤ —Å–µ–Ω—Ç—è–±—Ä–µ 1708 –≥–æ–¥–∞ —Ä–∞—Ç—É—à–∞ —Å–≥–æ—Ä–µ–ª–∞, –Ω–æ –±—ã–ª–∞ –±—ã—Å—Ç—Ä–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ê –≤ 1733 –≥–æ–¥—É –≤ –Ω–µ–π –ø—Ä–æ–≤–µ–¥—ë–Ω –±–æ–ª—å—à–æ–π —Ä–µ–º–æ–Ω—Ç.\n–ó–¥–∞–Ω–∏–µ –±—ã–ª–æ —Å–∞–º—ã–º –≤—ã—Å–æ–∫–∏–º –≤ –≥–æ—Ä–æ–¥–µ. –í 1780 –≥–æ–¥—É —Å –µ—ë —Å–º–æ—Ç—Ä–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏ –ú–æ–≥–∏–ª—ë–≤–æ–º –ª—é–±–æ–≤–∞–ª–∏—Å—å –∏–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ II –∏ –∞–≤—Å—Ç—Ä–∏–π—Å–∫–∏–π –∏–º–ø–µ—Ä–∞—Ç–æ—Ä –ò–æ—Å–∏—Ñ II.\n\n–í–æ –≤—Ä–µ–º—è –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã —Ä–∞—Ç—É—à–∞ –±—ã–ª–∞ —Å–∏–ª—å–Ω–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞. 28 –¥–µ–∫–∞–±—Ä—è 1952 –≥–æ–¥–∞ –Ω–∞ —Å–æ–≤–µ—â–∞–Ω–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–æ–≤ –ë–°–°–† –ø–æ –æ—Ö—Ä–∞–Ω–µ –ø–∞–º—è—Ç–Ω–∏–∫–æ–≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –æ –µ—ë –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏, 11 —Å–µ–Ω—Ç—è–±—Ä—è 1953 –≥–æ–¥–∞ ‚Äî —Ä–µ—à–µ–Ω–∏–µ –ò—Å–ø–æ–ª–∫–æ–º–∞ –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–≥–æ –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ –°–æ–≤–µ—Ç–∞ –¥–µ–ø—É—Ç–∞—Ç–æ–≤ ‚Ññ 725, —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ—Ç–æ—Ä–æ–º—É –∑–¥–∞–Ω–∏–µ —Ä–∞—Ç—É—à–∏ –æ–±—ä—è–≤–ª—è–ª–æ—Å—å –ø–∞–º—è—Ç–Ω–∏–∫–æ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, –∞ —Ä–∞–±–æ—Ç—ã –ø–æ –µ—ë —Ä–µ—Å—Ç–∞–≤—Ä–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –±—ã—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω—ã –∫ 10 –¥–µ–∫–∞–±—Ä—è 1953 –≥–æ–¥–∞. –û–¥–Ω–∞–∫–æ —Ä–µ—Å—Ç–∞–≤—Ä–∞—Ü–∏—è —Ä–∞—Ç—É—à–∏ —Ç–∞–∫ –∏ –Ω–µ –±—ã–ª–∞ –Ω–∞—á–∞—Ç–∞, –∞ –≤ –∏—é–ª–µ 1957 –≥–æ–¥–∞ –æ–Ω–∞ –±—ã–ª–∞ –≤–∑–æ—Ä–≤–∞–Ω–∞.\n–ù–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –ø–æ–¥–Ω–∏–º–∞–ª–∏—Å—å —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥–æ—Ä–æ–¥—Å–∫–æ–π —Ä–∞—Ç—É—à–∏, –Ω–æ –ª–∏—à—å 23 –º–∞—è 1992 –≥–æ–¥–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è –∑–∞–∫–ª–∞–¥–∫–∞ 1-–≥–æ –∫–∞–º–Ω—è –Ω–∞ —Å—Ç–∞—Ä–æ–º –º–µ—Å—Ç–µ –±—É–¥—É—â–µ–π —Ä–∞—Ç—É—à–∏ –∏ –µ–≥–æ –æ—Å–≤—è—â–µ–Ω–∏–µ –Ω–∞ —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –º–æ–ª–µ–±–Ω–µ. –†–µ–∞–ª—å–Ω–æ –∫ –ø—Ä–æ–µ–∫—Ç—É –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤—É –ø—Ä–∏—Å—Ç—É–ø–∏–ª–∏ –ª–∏—à—å –≤ 2007 –≥–æ–¥—É. –í 2008 –≥–æ–¥—É –≤ –¥–µ–Ω—å –≥–æ—Ä–æ–¥–∞ –ø—Ä–æ–∏–∑–æ—à–ª–æ –µ—ë —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ_',
                #                       reply_markup=markup, parse_mode='MarkDown')
                bot.answer_callback_query(call.id, show_alert=True,
                                          text="–û—à–∏–±–∫–∞ 0005\n–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            elif call.data == 'mog_maslen_map':
                # markup = telebot.types.InlineKeyboardMarkup()
                # site = types.InlineKeyboardButton("–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º—É–∑–µ–π –∏–º–µ–Ω–∏ –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤–∞", url="https://maslenikov.by/")
                # marsh = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mog_maslen_map')
                # nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –º—É–∑–µ–µ–≤", callback_data='mus_mogilev')
                # markup.row(site)
                # markup.row(nazad_mus)
                # bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                #                       text='*–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º—É–∑–µ–π –∏–º–µ–Ω–∏ –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤–∞*\n\n_–£—á—Ä–µ–∂–¥—ë–Ω –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ó–∞–∫–æ–Ω–æ–º –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å ¬´–û –º—É–∑–µ—è—Ö –∏ –º—É–∑–µ–π–Ω—ã—Ö —Ñ–æ–Ω–¥–∞—Ö –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å¬ª, –æ—Ç–∫—Ä—ã—Ç —Ä–µ—à–µ–Ω–∏–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–º–∏—Ç–µ—Ç–∞ –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–≥–æ –æ–±–ª–∞—Å—Ç–Ω–æ–≥–æ –°–æ–≤–µ—Ç–∞ –¥–µ–ø—É—Ç–∞—Ç–æ–≤ ‚Ññ 13 –æ—Ç 19 –Ω–æ—è–±—Ä—è 1990 –≥–æ–¥–∞.\n\n–£–∫–∞–∑–æ–º –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å –æ—Ç 22 —è–Ω–≤–∞—Ä—è 1996 –≥–æ–¥–∞ –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–º—É –æ–±–ª–∞—Å—Ç–Ω–æ–º—É –º—É–∑–µ—é –±—ã–ª–æ –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –∏–º—è –ü. –í. –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤–∞. –ú—É–∑–µ–π —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –≤ –∑–¥–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–º—è—Ç–Ω–∏–∫–æ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –Ω–∞—á–∞–ª–∞ XX –≤–µ–∫–∞. –ó–¥–∞–Ω–∏–µ –≤–æ–∑–≤–µ–ª–∏ –≤ 1903‚Äî1914 –≥–æ–¥–∞—Ö —Å —á–µ—Ä—Ç–∞–º–∏ –º–æ–¥–µ—Ä–Ω–∞, —Ä—É—Å—Å–∫–æ–≥–æ —Å—Ç–∏–ª—è –∏ –ø–æ–∑–¥–Ω–µ–≥–æ –∫–ª–∞—Å—Å–∏—Ü–∏–∑–º–∞._',
                #                       reply_markup=markup, parse_mode='MarkDown')
                bot.answer_callback_query(call.id, show_alert=True,
                                          text="–û—à–∏–±–∫–∞ 0005\n–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            elif call.data == 'mog_kraeved_map':
                # markup = telebot.types.InlineKeyboardMarkup()
                # site = types.InlineKeyboardButton("–ú–æ–≥–∏–ª—ë–≤—Å–∫–∏–π –æ–±–ª–∞—Å—Ç–Ω–æ–π –∫—Ä–∞–µ–≤–µ–¥—á–µ—Å–∫–∏–π –º—É–∑–µ–π", url="https://mogilevmuseum.by/")
                # marsh = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mog_kraeved_map')
                # nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –º—É–∑–µ–µ–≤", callback_data='mus_mogilev')
                # markup.row(site)
                # markup.row(nazad_mus)
                # bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                #                       text='*–ú–æ–≥–∏–ª—ë–≤—Å–∫–∏–π –æ–±–ª–∞—Å—Ç–Ω–æ–π –∫—Ä–∞–µ–≤–µ–¥—á–µ—Å–∫–∏–π –º—É–∑–µ–π*\n\n_–ü–µ—Ä–≤—ã–π –º—É–∑–µ–π –≤ –≥–æ—Ä–æ–¥–µ –ú–æ–≥–∏–ª—ë–≤ –±—ã–ª –æ—Ç–∫—Ä—ã—Ç 15 –Ω–æ—è–±—Ä—è 1867 –≥–æ–¥–∞ –ø—Ä–∏ –≥—É–±–µ—Ä–Ω—Å–∫–æ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–º –∫–æ–º–∏—Ç–µ—Ç–µ –∏ –ø–æ–ª—É—á–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –ú–æ–≥–∏–ª—ë–≤—Å–∫–∏–π –º—É–∑–µ–π.\n18 –¥–µ–∫–∞–±—Ä—è 1904 –≥–æ–¥–∞ –≤ –ú–æ–≥–∏–ª—ë–≤–µ –æ—Ç–∫—Ä—ã–ª—Å—è –≤—Ç–æ—Ä–æ–π –º—É–∑–µ–π ‚Äî —Ü–µ—Ä–∫–æ–≤–Ω–æ-–∞—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π. –í 1918 –≥–æ–¥—É –º—É–∑–µ–∏ –æ–±—ä–µ–¥–∏–Ω–∏–ª–∏—Å—å –≤ –æ–¥–∏–Ω ‚Äî –ì—É–±–µ—Ä–Ω—Å–∫–∏–π –º—É–∑–µ–π.\n–í 1928‚Äî1929 –≥–æ–¥–∞—Ö –º—É–∑–µ—é –ø–µ—Ä–µ–¥–∞–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —ç–∫—Å–ø–æ–Ω–∞—Ç—ã –∏–∑ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–Ω—Ç–∏–∫–≤–∞—Ä–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞ –°–°–°–†: –∏–∑–¥–µ–ª–∏—è –∏–∑ –¥—Ä–∞–≥–º–µ—Ç–∞–ª–ª–æ–≤ –∏ –∫–∞–º–Ω–µ–π, –∏–∫–æ–Ω—ã, –∫–∞—Ä—Ç–∏–Ω—ã, –∫–Ω–∏–≥–∏ –∏ —Ç. –¥. –í —Ç–æ–º —á–∏—Å–ª–µ –±—ã–ª–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ —Å–µ—Ä–µ–±—Ä—è–Ω–∞—è –±—É–ª–∞–≤–∞ –ø–æ–ª—å—Å–∫–æ–≥–æ –∫–æ—Ä–æ–ª—è –°–∏–≥–∏–∑–º—É–Ω–¥–∞ III. –ù–∞–∏–±–æ–ª–µ–µ —Ü–µ–Ω–Ω—ã–º –ø—Ä–µ–¥–º–µ—Ç–æ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —ç–∫—Å–ø–æ–Ω–∞—Ç–æ–º —Å—Ç–∞–ª –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤ –º—É–∑–µ–π –∫—Ä–µ—Å—Ç –ï—Ñ—Ä–æ—Å–∏–Ω—å–∏ –ü–æ–ª–æ—Ü–∫–æ–π ‚Äî –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–ª–∏–∫–≤–∏—è –±–µ–ª–æ—Ä—É—Å–æ–≤. –ö—Ä–µ—Å—Ç –∏ –¥—Ä—É–≥–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –±—ã–ª–∏ —Å—Ä–∞–∑—É –∂–µ –ø–æ–º–µ—â–µ–Ω—ã –≤ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–º–Ω–∞—Ç—É-—Å–µ–π—Ñ, –∏–º–µ–≤—à—É—é—Å—è –≤ –∑–¥–∞–Ω–∏–∏.\n...\n–° 1977 –≥–æ–¥–∞ –ø–æ –∏—é–ª—å 1990 –≥–æ–¥–∞ –º—É–∑–µ–π –±—ã–ª –∑–∞–∫—Ä—ã—Ç –Ω–∞ –∫–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç. –ü–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞ –±—ã–ª–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è, –¥–µ–π—Å—Ç–≤—É—é—â–∞—è –∏ –ø–æ–Ω—ã–Ω–µ.\n–í 1997 –≥–æ–¥—É –∫ 130-–ª–µ—Ç–Ω–µ–º—É —é–±–∏–ª–µ—é –º—É–∑–µ—è –±—ã–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∞ —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è –∞—Ä—Ö–µ–æ–ª–æ–≥–∏–∏._',
                #                       reply_markup=markup, parse_mode='MarkDown')
                bot.answer_callback_query(call.id, show_alert=True,
                                          text="–û—à–∏–±–∫–∞ 0005\n–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            elif call.data == 'mog_etnograph_map':
                # markup = telebot.types.InlineKeyboardMarkup()
                # site = types.InlineKeyboardButton("–ú—É–∑–µ–π —ç—Ç–Ω–æ–≥—Ä–∞—Ñ–∏–∏ - —Å–∞–π—Ç", callback_data='error_05')
                # marsh = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mog_etnograph_map')
                # nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –º—É–∑–µ–µ–≤", callback_data='mus_mogilev')
                # markup.row(site)
                # markup.row(nazad_mus)
                # bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                #                       text='*–ú—É–∑–µ–π —ç—Ç–Ω–æ–≥—Ä–∞—Ñ–∏–∏*\n\n_–ú—É–∑–µ–π —ç—Ç–Ω–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –ú–æ–≥–∏–ª—ë–≤–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∏–ª–∏–∞–ª–æ–º –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–≥–æ –æ–±–ª–∞—Å—Ç–Ω–æ–≥–æ –∏—Å—Ç–æ—Ä–∏–∫–æ-–∫—Ä–∞–µ–≤–µ–¥—á–µ—Å–∫–æ–≥–æ –º—É–∑–µ—è. –†–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É —É–ª. –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è ‚Ññ 8. –û—Ç–∫—Ä—ã—Ç –≤ 1981 –≥–æ–¥—É.\n–ü–ª–æ—â–∞–¥—å —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏ 760 –º¬≤, 4,5 —Ç—ã—Å. –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞ (2000). –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –º—É–∑–µ—è –∑–Ω–∞–∫–æ–º—è—Ç —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π –∏ –¥—É—Ö–æ–≤–Ω–æ–π –∫—É–ª—å—Ç—É—Ä—ã –∫—Ä–µ—Å—Ç—å—è–Ω –ú–æ–≥–∏–ª–µ–≤—Å–∫–æ–≥–æ –ü–æ–¥–Ω–µ–ø—Ä–æ–≤—å—è –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ –±—ã—Ç–∞ –º–æ–≥–∏–ª–µ–≤—á–∞–Ω –∫–æ–Ω—Ü–∞ XIX ‚Äî –Ω–∞—á–∞–ª–∞ XX –≤–µ–∫–æ–≤. –°—Ä–µ–¥–∏ —ç–∫—Å–ø–æ–Ω–∞—Ç–æ–≤ ‚Äî –æ—Ä—É–¥–∏—è —Ç—Ä—É–¥–∞, –ø—Ä–µ–¥–º–µ—Ç—ã –±—ã—Ç–∞, –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–¥–µ–∂–¥–∞ –º–æ–≥–∏–ª–µ–≤—Å–∫–∏—Ö –∏ –∫—Ä–∞—Å–Ω–æ–ø–æ–ª—å—Å–∫–∏—Ö –∫–æ—Å—Ç—é–º–æ–≤, –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø–æ–¥–ª–∏–Ω–Ω—ã—Ö –º–æ–≥–∏–ª—ë–≤—Å–∫–∏—Ö –ø–æ–ª–æ—Ç–µ–Ω–µ—Ü, –∏–∫–æ–Ω—ã, –∏–∑—Ä–∞–∑—Ü—ã –∏ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è —Å–∫—É–ª—å–ø—Ç—É—Ä–∞ XVII ‚Äî XIX –≤–µ–∫–æ–≤, —Ü–µ—Ä–∫–æ–≤–Ω—ã–µ –∫–Ω–∏–≥–∏, –∂—É—Ä–Ω–∞–ª—ã XIX ‚Äî –Ω–∞—á–∞–ª–∞ XX –≤–µ–∫–æ–≤.\n–ó–¥–∞–Ω–∏–µ –º—É–∑–µ—è —Å—Ç–æ–∏—Ç –Ω–∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–µ –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–≥–æ –∏–µ–∑—É–∏—Ç—Å–∫–æ–≥–æ –∫–æ–ª–ª–µ–≥–∏—É–º–∞. –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å—Ç–µ–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—ã—Ö–æ–¥–∏—Ç –≤–æ –¥–≤–æ—Ä –º—É–∑–µ—è, —è–≤–ª—è–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—á–Ω–æ–π —Å—Ç–µ–Ω–æ–π XVIII –≤–µ–∫–∞, –±—ã–≤—à–µ–π —á–∞—Å—Ç—å—é –∫–æ–ª–ª–µ–≥–∏—É–º–∞._',
                #                       reply_markup=markup, parse_mode='MarkDown')
                bot.answer_callback_query(call.id, show_alert=True,
                                          text="–û—à–∏–±–∫–∞ 0005\n–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            elif call.data == 'mog_belbir_map':
                # markup = telebot.types.InlineKeyboardMarkup()
                # site = types.InlineKeyboardButton("–ú—É–∑–µ–π –ë—è–ª—ã–Ω–∏—Ü–∫–æ–≥–æ-–ë–∏—Ä—É–ª–∏ - —Å–∞–π—Ç", url="https://bb.artmuseum.by/ru")
                # marsh = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mog_belbir_map')
                # nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –º—É–∑–µ–µ–≤", callback_data='mus_mogilev')
                # markup.row(site)
                # markup.row(nazad_mus)
                # bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                #                       text='*–ú—É–∑–µ–π –ë—è–ª—ã–Ω–∏—Ü–∫–æ–≥–æ-–ë–∏—Ä—É–ª–∏*\n\n_–•—É–¥–æ–∂–Ω–∏–∫ —Ä–æ–¥–∏–ª—Å—è –≤ 1872 –≥–æ–¥—É –≤ –¥–µ—Ä–µ–≤–Ω–µ –ö—Ä—ã–Ω–∫–∏ –±–ª–∏–∑ –ë–µ–ª—ã–Ω–∏—á–µ–π –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–π –≥—É–±–µ—Ä–Ω–∏–∏. –ï–≥–æ —Ä–æ–¥–Ω–æ–π –¥–æ–º –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è. –ú—É–∑–µ–π —Ö—É–¥–æ–∂–Ω–∏–∫–∞ –±—ã–ª –æ—Ç–∫—Ä—ã—Ç –≤ –ø–∞–º—è—Ç–Ω–∏–∫–µ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã XVII –≤–µ–∫–∞ ‚Äî –∫–∞–º–µ–Ω–Ω–æ–º –¥–≤—É—Ö—ç—Ç–∞–∂–Ω–æ–º –æ—Å–æ–±–Ω—è–∫–µ —Å –º–∞–Ω—Å–∞—Ä–¥–æ–π –Ω–∞ —É–ª–∏—Ü–µ –õ–µ–Ω–∏–Ω—Å–∫–æ–π, 37 –≤ –ú–æ–≥–∏–ª—ë–≤–µ. –í –º–∞–µ 1780 –≥–æ–¥–∞ —ç—Ç–æ—Ç –¥–æ–º, –∫–∞–∫ —Å–∞–º—ã–π –ª—É—á—à–∏–π –∏–∑ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–≤—à–∏—Ö —Ç–æ–≥–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ –¥–≤—É—Ö—ç—Ç–∞–∂–Ω—ã—Ö –∫–∞–º–µ–Ω–Ω—ã—Ö –¥–æ–º–æ–≤, –±—ã–ª –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –∞–≤—Å—Ç—Ä–∏–π—Å–∫–æ–º—É –∏–º–ø–µ—Ä–∞—Ç–æ—Ä—É –ò–æ—Å–∏—Ñ—É II –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ —Å –ï–∫–∞—Ç–µ—Ä–∏–Ω–æ–π II. –° 1815 –ø–æ 1917 –≥–æ–¥—ã –≤ —ç—Ç–æ–º –¥–æ–º–µ —Ä–∞–∑–º–µ—â–∞–ª–æ—Å—å –ú–æ–≥–∏–ª—ë–≤—Å–∫–æ–µ –¥–≤–æ—Ä—è–Ω—Å–∫–æ–µ –¥–µ–ø—É—Ç–∞—Ç—Å–∫–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ. –í 1918 –≥–æ–¥—É –ø–æ–º–µ—â–µ–Ω–∏–µ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –≥–æ—Ä–æ–¥—Å–∫–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∏–º–µ–Ω–∏ –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞. –ó–¥–∞–Ω–∏–µ –±—ã–ª–æ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–∑—Ä—É—à–µ–Ω–æ –≤ –≥–æ–¥—ã –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã. –í 1970-—Ö –≥–æ–¥–∞—Ö –µ–≥–æ —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–ª–∏: –Ω–∞–¥—Å—Ç—Ä–æ–∏–ª–∏ 3-–π —ç—Ç–∞–∂ –∏ –∫—Ä—ã—à—É. –í –ø–ª–∞–Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–µ –∑–¥–∞–Ω–∏–µ —Å–æ —Å–≤–æ–¥—á–∞—Ç—ã–º –º–∞—Å—Å–∏–≤–Ω—ã–º –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ–º. –¶–µ–Ω—Ç—Ä –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ ‚Äî –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞, –≤–æ–∫—Ä—É–≥ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞ –≤—Ç–æ—Ä–æ–º —ç—Ç–∞–∂–µ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω—ã –±—ã–≤—à–∏–µ –∂–∏–ª—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è. –°—Ç–µ–Ω—ã –ø—Ä–æ—Ä–µ–∑–∞–Ω—ã –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–º–∏ –æ–∫–æ–Ω–Ω—ã–º–∏ –ø—Ä–æ—ë–º–∞–º–∏ –∏ –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ª–æ–ø–∞—Ç–∫–∞–º–∏. –í —Ü–µ–Ω—Ç—Ä–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞—Å–∞–¥–∞ –ø—Ä–∏ —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–¥–µ–ª–∞–Ω –ª—É—á–∫–æ–≤—ã–π –≤—Ö–æ–¥–Ω–æ–π –ø—Ä–æ—ë–º –∏ –Ω–µ–±–æ–ª—å—à–æ–π –±–∞–ª–∫–æ–Ω —Å –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–æ–π –∞–∂—É—Ä–Ω–æ–π –æ–≥—Ä–∞–¥–æ–π. –ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂ –∏ –±–æ–ª—å—à–æ–π –ø–æ–¥–≤–∞–ª –ø–æ–¥ –Ω–∏–º –∏–º–µ—é—Ç —Å–≤–æ–¥—á–∞—Ç–æ–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ, –≤—Ç–æ—Ä–æ–π ‚Äî –±–∞–ª–æ—á–Ω–æ–µ. –î–æ–º —è–≤–ª—è–µ—Ç—Å—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º –ø–∞–º—è—Ç–Ω–∏–∫–æ–º –≤ —Å—Ç–∏–ª–µ –±–∞—Ä–æ–∫–∫–æ.\n–° 1982 –≥–æ–¥–∞ –≤ –∑–¥–∞–Ω–∏–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–∏–ª–∏–∞–ª –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º—É–∑–µ—è –ë–µ–ª–∞—Ä—É—Å–∏ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º—É–∑–µ–π –ë—è–ª—ã–Ω–∏—Ü–∫–æ–≥–æ-–ë–∏—Ä—É–ª–∏ –í. –ö._',
                #                       reply_markup=markup, parse_mode='MarkDown')
                bot.answer_callback_query(call.id, show_alert=True, text="–û—à–∏–±–∫–∞ 0005\n–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            elif call.data == 'error_05':
                bot.answer_callback_query(call.id, show_alert=True, text="–û—à–∏–±–∫–∞ 0005\n–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

            elif call.data == 'error_06':
                bot.answer_callback_query(call.id, show_alert=True, text="–û—à–∏–±–∫–∞ 0006\n–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω :-)")

            elif call.data == 'settings':

                markup = telebot.types.InlineKeyboardMarkup()
                if vass_private.is_admin(call.from_user.id) == True:
                    a = telebot.types.InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ", callback_data='set_notify_vid')
                    b = telebot.types.InlineKeyboardButton("–°–∫—Ä—ã—Ç–∏–µ –∞–¥–º–∏–Ω–∫–∏", callback_data='admin_hide')
                    c = telebot.types.InlineKeyboardButton("–†–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–∞",  callback_data='tester_mode')
                    passw = telebot.types.InlineKeyboardButton("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", callback_data='pass_settings')
                    d = telebot.types.InlineKeyboardButton("–û –±–æ—Ç–µ", callback_data='what_bot')
                    exit = telebot.types.InlineKeyboardButton("–í—ã–π—Ç–∏", callback_data='exit')
                    markup.row(a)
                    markup.row(b)
                    markup.row(c)
                    markup.row(passw)
                    markup.row(d)
                    markup.row(exit)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞',
                                          reply_markup=markup)
                    tz_minsk = pytz.timezone("Europe/Minsk")
                    print(
                        f'[LOG] | {datetime.now(tz_minsk)} | –û—Ç–∫—Ä—ã—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä) | {call.from_user.id} | {call.from_user.username} | ')
                    loggingf(call.from_user.id, call.from_user.username, "–û—Ç–∫—Ä—ã—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)")

                else:
                    a = telebot.types.InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ", callback_data='set_notify_vid')
                    passw = telebot.types.InlineKeyboardButton("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", callback_data='pass_settings')
                    b = telebot.types.InlineKeyboardButton("–û –±–æ—Ç–µ",  callback_data='what_bot')
                    c = telebot.types.InlineKeyboardButton("–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",  callback_data='error_in_upd')
                    exit = telebot.types.InlineKeyboardButton("–í—ã–π—Ç–∏", callback_data='settings')
                    markup.row(a)
                    markup.row(passw)
                    markup.row(b)
                    markup.row(c)
                    markup.row(exit)
                    tz_minsk = pytz.timezone("Europe/Minsk")
                    print(
                        f'[LOG] | {datetime.now(tz_minsk)} | –û—Ç–∫—Ä—ã—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ | {call.from_user.id} | {call.from_user.username} | ')
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞',
                                          reply_markup=markup)
                    loggingf(call.from_user.id, call.from_user.username, "–û—Ç–∫—Ä—ã—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")



            elif call.data == 'eda_str1':
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–¢–∞–Ω–¥—ã–†", callback_data='tandir')
                b = types.InlineKeyboardButton("Domino's Pizza", callback_data='dominos_pizza')
                c = types.InlineKeyboardButton("–í–∞—Å–∏–ª—å–∫–∏", callback_data='vasilki')
                num = types.InlineKeyboardButton("1", callback_data='eda_str1_01')
                next_p = types.InlineKeyboardButton(">", callback_data='eda_str2')
                nazad_mus = telebot.types.InlineKeyboardButton("–í—ã–π—Ç–∏", callback_data='org_type')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus, num, next_p)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –≤–∞–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–∞—Ä—Ç–∞ –∏ —Å–∞–π—Ç',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ | –ï–¥–∞ | –°—Ç—Ä–∞–Ω–∏—Ü–∞: 1 | {call.from_user.id} | {call.from_user.username} | ')

            elif call.data == 'eda_str2':
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("Burger King", callback_data='burger_king')
                b = types.InlineKeyboardButton("KFC", callback_data='KFC')
                c = types.InlineKeyboardButton("MC Doner", callback_data='mcdoner')
                last_p = types.InlineKeyboardButton("<", callback_data='eda_str1')
                num = types.InlineKeyboardButton("2", callback_data='eda_str2_01')
                next_p = types.InlineKeyboardButton(">", callback_data='str2')
                nazad_mus = telebot.types.InlineKeyboardButton("–í—ã–π—Ç–∏", callback_data='org_type')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(last_p, num)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –≤–∞–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–∞—Ä—Ç–∞ –∏ —Å–∞–π—Ç',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ | –ï–¥–∞ | –°—Ç—Ä–∞–Ω–∏—Ü–∞: 2 | {call.from_user.id} | {call.from_user.username} | ')
                #–¢–ê–ù–î–´–†
            elif call.data == 'tandir':
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="https://tandyr-cafe.by")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='tandir_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='tandir_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str1')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*–¢–∞–Ω–¥—ã–†*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ø–ª–æ—â–∞–¥—å –°–ª–∞–≤—ã, 2',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ | –ï–¥–∞ | –¢–∞–Ω–¥—ã–† | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'tandir_map':
                url = 'https://static-maps.yandex.ru/v1?lang=ru_RU&pt=30.330525198672877,53.895220859337975,pm2dbl&z=15&apikey=0c0e4801-78d4-4a7c-80ea-7c18e4fc9b32'
                response = requests.get(url)

                if response.status_code == 200:
                    bot.send_photo(chat_id=call.from_user.id, photo=response.content)
                    markup = telebot.types.InlineKeyboardMarkup()
                    a = types.InlineKeyboardButton("–°–∞–π—Ç", url="https://tandyr-cafe.by")
                    b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='tandir_map')
                    c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='tandir_marsh')
                    nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str1')
                    markup.row(a)
                    markup.row(b)
                    markup.row(c)
                    markup.row(nazad_mus)
                    bot.send_message(chat_id=call.message.chat.id,
                                     text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*–¢–∞–Ω–¥—ã–†*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ø–ª–æ—â–∞–¥—å –°–ª–∞–≤—ã, 2',
                                     reply_markup=markup, parse_mode='MarkDown')
                    tz_minsk = pytz.timezone("Europe/Minsk")
                    print(
                        f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - TandiR | Type: Map | Status: OK (200) |{call.from_user.id} | {call.from_user.username} | ')
                else:
                    print('Failed to download image')
            elif call.data == 'tandir_marsh':
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.330534192956257,53.895209941464955&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())

                bot.send_location(call.from_user.id, latitude, longitude)
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="https://tandyr-cafe.by")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='tandir_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='tandir_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str1')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                bot.send_message(chat_id=call.message.chat.id,
                                 text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*–¢–∞–Ω–¥—ã–†*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ø–ª–æ—â–∞–¥—å –°–ª–∞–≤—ã, 2',
                                 reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - TandiR | Type: Route | Status: OK (200) |{call.from_user.id} | {call.from_user.username} | ')

            elif call.data == 'dominos_pizza':
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="dominos.by")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='dominos_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='tandir_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str1')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ | –ï–¥–∞ | Dominos Pizza | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*Dominos Pizza*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 5/1',reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'dominos_map':
                url = 'https://static-maps.yandex.ru/v1?lang=ru_RU&pt=30.332194291403482,53.89698202200782,pm2dbl&z=15&apikey=0c0e4801-78d4-4a7c-80ea-7c18e4fc9b32'
                response = requests.get(url)

                if response.status_code == 200:
                    bot.send_photo(chat_id=call.from_user.id, photo=response.content)
                    markup = telebot.types.InlineKeyboardMarkup()
                    a = types.InlineKeyboardButton("–°–∞–π—Ç", url="dominos.by")
                    b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='dominos_map')
                    c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='dominos_marsh')
                    nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str1')
                    markup.row(a)
                    markup.row(b)
                    markup.row(c)
                    markup.row(nazad_mus)
                    bot.send_message(chat_id=call.message.chat.id,
                                     text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*Dominos Pizza*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 5/1',
                                     reply_markup=markup, parse_mode='MarkDown')
                    tz_minsk = pytz.timezone("Europe/Minsk")
                    print(
                        f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - Dominos | Type: Map | Status: OK (200) |{call.from_user.id} | {call.from_user.username} | ')
                else:
                    print('Failed to download image')
            elif call.data == 'dominos_marsh':
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.332292611852285,53.89691726571662&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())

                bot.send_location(call.from_user.id, latitude, longitude)
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="dominos.by")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='dominos_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='dominos_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str1')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                bot.send_message(chat_id=call.message.chat.id,
                                 text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*Dominos Pizza*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 5/1',
                                 reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - Dominos | Type: Route | Status: OK (200) |{call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'vasilki':
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="vasilki.by")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='vasilki_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='vasilki_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str1')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ | –ï–¥–∞ | –í–∞—Å–∏–ª—å–∫–∏ | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*–í–∞—Å–∏–ª—å–∫–∏*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'vasilki_map':
                url = 'https://static-maps.yandex.ru/v1?lang=ru_RU&pt=30.33950419126453,53.90455716873452,pm2dbl&z=15&apikey=0c0e4801-78d4-4a7c-80ea-7c18e4fc9b32'
                response = requests.get(url)

                if response.status_code == 200:
                    bot.send_photo(chat_id=call.from_user.id, photo=response.content)
                    markup = telebot.types.InlineKeyboardMarkup()
                    a = types.InlineKeyboardButton("–°–∞–π—Ç", url="vasilki.by")
                    b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='vasilki_map')
                    c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='vasilki_marsh')
                    nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str1')
                    markup.row(a)
                    markup.row(b)
                    markup.row(c)
                    markup.row(nazad_mus)
                    tz_minsk = pytz.timezone("Europe/Minsk")
                    print(
                        f'[LOG] | {datetime.now(tz_minsk)} | API | Ogr - Eda - Vasilki | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
                    bot.send_message(chat_id=call.message.chat.id,
                                     text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*–í–∞—Å–∏–ª—å–∫–∏*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',
                                     reply_markup=markup, parse_mode='MarkDown')
                    tz_minsk = pytz.timezone("Europe/Minsk")
                    print(
                        f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - Vasilki | Type: Map | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
                else:
                    print('Failed to download image')
            elif call.data == 'vasilki_marsh':
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.339475526568567,53.90456286911653&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())

                bot.send_location(call.from_user.id, latitude, longitude)
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="vasilki.by")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='vasilki_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='vasilki_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str1')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                bot.send_message(chat_id=call.message.chat.id,
                                 text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*–í–∞—Å–∏–ª—å–∫–∏*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',
                                 reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - Vasilki | Type: Route | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'burger_king':
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="https://burger-king.by/")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='burger_king_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='burger_king_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str2')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ | –ï–¥–∞ | –ë—É—Ä–≥–µ—Ä –ö–∏–Ω–≥ | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*Burger King*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'burger_king_map':
                url = 'https://static-maps.yandex.ru/v1?lang=ru_RU&pt=30.339536377772717,53.9040788367524,pm2dbl&z=15&apikey=0c0e4801-78d4-4a7c-80ea-7c18e4fc9b32'
                response = requests.get(url)

                if response.status_code == 200:
                    bot.send_photo(chat_id=call.from_user.id, photo=response.content)
                    markup = telebot.types.InlineKeyboardMarkup()
                    a = types.InlineKeyboardButton("–°–∞–π—Ç", url="https://burger-king.by/")
                    b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='burger_king_map')
                    c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='burger_king_marsh')
                    nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str2')
                    markup.row(a)
                    markup.row(b)
                    markup.row(c)
                    markup.row(nazad_mus)
                    bot.send_message(chat_id=call.message.chat.id,
                                     text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*Burger King*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',
                                     reply_markup=markup, parse_mode='MarkDown')
                    tz_minsk = pytz.timezone("Europe/Minsk")
                    print(
                        f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - BurgerKing | Type: Map | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
                else:
                    print('Failed to download image')

            elif call.data == 'burger_king_marsh':
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.339534535166884,53.90407820164098&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())

                bot.send_location(call.from_user.id, latitude, longitude)
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="https://burger-king.by/")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='burger_king_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='burger_king_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str2')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                bot.send_message(chat_id=call.message.chat.id,
                                 text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*Burger King*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',
                                 reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - BurgerKing | Type: Route | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'KFC':
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="www.kfc.by")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='kfc_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='kfc_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str2')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ | –ï–¥–∞ | KFC | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*KFC*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'kfc_map':
                url = 'https://static-maps.yandex.ru/v1?lang=ru_RU&pt=30.33950419126453,53.904018648894684,pm2dbl&z=15&apikey=0c0e4801-78d4-4a7c-80ea-7c18e4fc9b32'
                response = requests.get(url)

                if response.status_code == 200:
                    bot.send_photo(chat_id=call.from_user.id, photo=response.content)
                    markup = telebot.types.InlineKeyboardMarkup()
                    a = types.InlineKeyboardButton("–°–∞–π—Ç", url="www.kfc.by")
                    b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='kfc_map')
                    c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='kfc_marsh')
                    nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str2')
                    markup.row(a)
                    markup.row(b)
                    markup.row(c)
                    markup.row(nazad_mus)
                    bot.send_message(chat_id=call.message.chat.id,
                                     text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*KFC*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',
                                     reply_markup=markup, parse_mode='MarkDown')
                    tz_minsk = pytz.timezone("Europe/Minsk")
                    print(
                        f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - KFC | Type: Map | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
                else:
                    print('Failed to download image')
            elif call.data == 'kfc_marsh':
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.33946479773249,53.90399583928616&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())

                bot.send_location(call.from_user.id, latitude, longitude)
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="www.kfc.by")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='kfc_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='kfc_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str2')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                bot.send_message(chat_id=call.message.chat.id,
                                 text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*KFC*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',
                                 reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - KFC | Type: Route | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'mcdoner':
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="www.mcdoner.by")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='mcdoner_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mcdoner_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str2')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ | –ï–¥–∞ | Mc Doner | {call.from_user.id} | {call.from_user.username} | ')
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*MC Doner*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'mcdoner_map':
                url = 'https://static-maps.yandex.ru/v1?lang=ru_RU&pt=30.33950419126453,53.904018648894684,pm2dbl&z=15&apikey=0c0e4801-78d4-4a7c-80ea-7c18e4fc9b32'
                response = requests.get(url)

                if response.status_code == 200:
                    bot.send_photo(chat_id=call.from_user.id, photo=response.content)
                    markup = telebot.types.InlineKeyboardMarkup()
                    a = types.InlineKeyboardButton("–°–∞–π—Ç", url="www.mcdoner.by")
                    b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='mcdoner_map')
                    c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mcdoner_marsh')
                    nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str2')
                    markup.row(a)
                    markup.row(b)
                    markup.row(c)
                    markup.row(nazad_mus)
                    bot.send_message(chat_id=call.message.chat.id,
                                     text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*MC Doner*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',
                                     reply_markup=markup, parse_mode='MarkDown')
                    tz_minsk = pytz.timezone("Europe/Minsk")
                    print(
                        f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - mcdoner | Type: Map | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
                else:
                    print('Failed to download image')
            elif call.data == 'mcdoner_marsh':
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.33946479773249,53.90399583928616&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–°–∞–π—Ç", url="www.mcdoner.by")
                b = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É", callback_data='mcdoner_map')
                c = types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='mcdoner_marsh')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='eda_str2')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | API | Org - Eda - mcdoner | Type: Route | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
                bot.send_message(chat_id=call.message.chat.id,
                                 text='*–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n_–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Yandex Maps API\n–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å_ [–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç](https://yandex.ru/legal/maps_termsofuse/)\n\n*MC Doner*\n–ê–¥—Ä–µ—Å: –ú–æ–≥–∏–ª—ë–≤, –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è —É–ª., 57 | –≠—Ç–∞–∂ 3',
                                 reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'eda_str2_01':
                bot.answer_callback_query(call.id, show_alert=False, text="–í—ã —É–∂–µ –Ω–∞ 2 —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
            elif call.data == 'eda_str1_01':
                bot.answer_callback_query(call.id, show_alert=False, text="–í—ã —É–∂–µ –Ω–∞ 1 —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
            elif call.data == 'mogilev1_m':
                bot.answer_callback_query(call.id, show_alert=False, text="–ú–∞—Ä—à—Ä—É—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω")
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.330336518434258,53.89410230353201&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)

            elif call.data == 'mogilev2_m':
                bot.answer_callback_query(call.id, show_alert=False, text="–ú–∞—Ä—à—Ä—É—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω")
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.328563376711298,53.89432203722363&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)

            elif call.data == 'mogilev3_m':
                bot.answer_callback_query(call.id, show_alert=False, text="–ú–∞—Ä—à—Ä—É—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω")
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.33326944241014,53.897539033992686&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)

            elif call.data == 'mogilev4_m':
                bot.answer_callback_query(call.id, show_alert=False, text="–ú–∞—Ä—à—Ä—É—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω")
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.331568921894704,53.89723804650289&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)

            elif call.data == 'mogilev5_m':
                bot.answer_callback_query(call.id, show_alert=False, text="–ú–∞—Ä—à—Ä—É—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω")
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.340755964791597,53.90231255556979&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)

            elif call.data == 'mogilev6_m':
                bot.answer_callback_query(call.id, show_alert=False, text="–ú–∞—Ä—à—Ä—É—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω")
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.342986267488666,53.90903024054357&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)

            elif call.data == 'mogilev7_m':
                bot.answer_callback_query(call.id, show_alert=False, text="–ú–∞—Ä—à—Ä—É—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω")
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.257366342989965,53.8615069146858&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)

            elif call.data == 'what_bot':
                markup = telebot.types.InlineKeyboardMarkup()
                a = types.InlineKeyboardButton("–û –±–æ—Ç–µ", callback_data='o_bote')
                b = types.InlineKeyboardButton("–û –ü—Ä–æ–µ–∫—Ç–µ", callback_data='o_project')
                c = types.InlineKeyboardButton("–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º", callback_data='error_in_upd')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='exit')
                markup.row(a)
                markup.row(b)
                markup.row(c)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–û –ø—Ä–æ–µ–∫—Ç–µ / –±–æ—Ç–µ*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø–æ–¥—Ä–∞–∑–¥–µ–ª',
                                      reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'o_bote':
                markup = telebot.types.InlineKeyboardMarkup()
                about = telebot.types.InlineKeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ", url="https://t.me/BelarusNature_bot/about_bot")
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='what_bot')
                markup.row(about)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–û –±–æ—Ç–µ*\n\n*Belarus Nature Bot*\n\n*Belarus Nature bot* - —ç—Ç–æ —É–º–Ω—ã–π —á–∞—Ç-–±–æ—Ç, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–ª—è –ø–æ–º–æ—â–∏ —Ç—É—Ä–∏—Å—Ç–∞–º –≤  –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π. –°–æ—á–µ—Ç–∞—è –≤ —Å–µ–±–µ –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö, –º–µ—Å—Ç–Ω–æ–π –∫—É–ª—å—Ç—É—Ä–µ.\n1. BelarusNature –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö–¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö, –∏—Ö –∏—Å—Ç–æ—Ä–∏–∏, –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏.\n2. *BelarusNature* —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ç—É—Ä–∏—Å—Ç –Ω–µ –±—É–¥–µ—Ç —Å–∫—É—á–∞—Ç—å –∏ –ø–æ—Å–µ—Ç–∏—Ç –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–µ—Å—Ç...\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ –Ω–∞—à–µ–π —Å—Ç–∞—Ç—å–µ.',
                                      reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'o_project':
                markup = telebot.types.InlineKeyboardMarkup()
                about = telebot.types.InlineKeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ", url="https://t.me/BelarusNature_bot/about_project")
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='what_bot')
                markup.row(about)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–û –ø—Ä–æ–µ–∫—Ç–µ*\n\n*Belarus Nature*\n\n–ü—Ä–æ–µ–∫—Ç Belarus Nature –Ω–∞—á–∞–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –≤ 2024 –≥–æ–¥—É —Å —Ü–µ–ª—å—é —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø–æ –∂–∏–≤–æ–ø–∏—Å–Ω—ã–º —É–≥–æ–ª–∫–∞–º –ø—Ä–∏—Ä–æ–¥—ã –ë–µ–ª–∞—Ä—É—Å–∏. –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª—É—á—à–∏—Ö –º–µ—Å—Ç–∞—Ö –¥–ª—è –ø–µ—à–∏—Ö –∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥–Ω—ã—Ö –ø—Ä–æ–≥—É–ª–æ–∫, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–∏–∫–Ω–∏–∫–æ–≤ –∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥–æ–π.\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ –Ω–∞—à–µ–π —Å—Ç–∞—Ç—å–µ',
                                      reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'pldel':
                markup = telebot.types.InlineKeyboardMarkup()
                about = telebot.types.InlineKeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ", url="https://t.me/BelarusNature_bot/about_project")
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='what_bot')
                markup.row(about)
                markup.row(nazad_mus)
                text = f'–ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö\n{call.from_user.id} - @{call.from_user.username}'
                url = f'https://api.telegram.org/bot{TOKEN}/sendMessage?chat_id=6978792645&text={text}'
                response = requests.get(url)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω*\n\n*–í–∞–∂–Ω–æ! –ï—Å–ª–∏ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ç–æ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ. –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∞ BN Plus —Å–≥–æ—Ä–∞–µ—Ç*\n\nBN Team',
                                      reply_markup=markup, parse_mode='MarkDown')
                loggingf(call.from_user.id, call.from_user.username, "–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
            elif call.data == 'error_in_upd':
                bot.answer_callback_query(call.id, show_alert=False, text="–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –±—É–¥–µ—Ç —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ)")











            elif call.data == 'wait':
                bot.answer_callback_query(call.id, show_alert=False, text="–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Å–∫—É—à–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ\n–ù–æ —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –º—ã —Å–¥–µ–ª–∞–µ–º –Ω–æ–≤—ã–π")

            elif call.data == 'pass_settings':
                bot.answer_callback_query(call.id, show_alert=True, text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /login")

            elif call.data == 'apanel_bot':
                bot.answer_callback_query(call.id, show_alert=False, text="–ê–î–ú–ò–ù –ò–î–ò –ù–ê–•–£–ô")
            elif call.data == 'org_type':
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("–ï–¥–∞ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã", callback_data='eda_str1')
                kino = telebot.types.InlineKeyboardButton("–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã", callback_data='kino')
                hotel = telebot.types.InlineKeyboardButton("–û—Ç–µ–ª–∏", callback_data='hotel')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='exit')
                markup.row(eda)
                markup.row(kino)
                markup.row(hotel)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n*‚≠êÔ∏è –í—ã–±–æ—Ä —Ç–∏–ø–∞ ‚≠êÔ∏è*\n\n_–ö–æ–º–∞–Ω–¥–∞ BN –≤–µ–ª–∏–∫–æ–¥—É—à–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –í–∞–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ_',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –í—ã–±–æ—Ä —Ç–∏–ø–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'kino':
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("StarLight Cinema", callback_data='starlight')
                kino = telebot.types.InlineKeyboardButton("–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä –†–æ–¥–∏–Ω–∞", callback_data='rodina')
                hotel = telebot.types.InlineKeyboardButton("–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä –ß—ã—Ä–≤–æ–Ω–∞—è –ó–æ—Ä–∫–∞", callback_data='chirzor')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='org_type')
                markup.row(eda)
                markup.row(kino)
                markup.row(hotel)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n*–í—ã–±–æ—Ä —Ç–∏–ø–∞*\n\n–ü—Ä–æ–µ–∫—Ç Belarus Nature —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –≤–∞–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–æ–≤ –Ω–∏–∂–µ',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'hotel':
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("Atrium Hotel", callback_data='atrium_hotel')
                kino = telebot.types.InlineKeyboardButton("Metropol Hotel", callback_data='metropol_hotel')
                hotel = telebot.types.InlineKeyboardButton("–ì—É–±–µ—Ä–Ω—Å–∫–∞—è", callback_data='gubernskaya')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='org_type')
                markup.row(eda)
                markup.row(kino)
                markup.row(hotel)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n*–í—ã–±–æ—Ä —Ç–∏–ø–∞*\n\n–ü—Ä–æ–µ–∫—Ç Belarus Nature —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –≤–∞–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–æ–≤ –Ω–∏–∂–µ',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ç–µ–ª–∏ | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'starlight':
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("StarLight Cinema - –°–∞–π—Ç", url="https://starcinema.by/")
                kino = telebot.types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='starlight_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='kino')
                markup.row(eda)
                markup.row(kino)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n*StarLight Cinema*\n\n–ú–Ω–æ–≥–æ–∑–∞–ª—å–Ω—ã–π –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä –≤ –ú–æ–≥–∏–ª–µ–≤–µ\n\n–ü—Ä–µ–π–º—É—â–µ—Å—Ç–≤–∞:\n1. 5 –∫–∏–Ω–æ–∑–∞–ª–æ–≤\n2. –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 4–ö\n3. Dolby Atmos\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ —Å–∞–π—Ç–µ',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã - StarLight Cinema | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'rodina':
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("–†–æ–¥–∏–Ω–∞ - –°–∞–π—Ç", callback_data='starlight')
                kino = telebot.types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='rodina_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='kino')
                #markup.row(eda)
                #markup.row(kino)
                markup.row(nazad_mus)
                bot.answer_callback_query(call.id, show_alert=False, text="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã - –†–æ–¥–∏–Ω–∞ | {call.from_user.id} | {call.from_user.username} | ')

            elif call.data == 'chirzor':
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("–ß—ã—Ä–≤–æ–Ω–∞—è –ó–æ—Ä–∫–∞ - –°–∞–π—Ç", callback_data='starlight')
                kino = telebot.types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='chirzor_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='kino')
                #markup.row(eda)
                #markup.row(kino)
                markup.row(nazad_mus)
                bot.answer_callback_query(call.id, show_alert=False, text="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã - –ß—ã—Ä–≤–æ–Ω–∞—è –∑–æ—Ä–∫–∞ | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'starlight_map':
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.34008325337547,53.90440691405426&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("StarLight Cinema - –°–∞–π—Ç", url="https://starcinema.by/")
                kino = telebot.types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='starlight_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='kino')
                markup.row(eda)
                markup.row(nazad_mus)
                bot.send_message(call.from_user.id,
                                 f'–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ\n\nStarLight Cinema\n\n–ú–Ω–æ–≥–æ–∑–∞–ª—å–Ω—ã–π –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä –≤ –ú–æ–≥–∏–ª–µ–≤–µ\n\n–ü—Ä–µ–π–º—É—â–µ—Å—Ç–≤–∞:\n1. 5 –∫–∏–Ω–æ–∑–∞–ª–æ–≤\n2. –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 4–ö\n3. Dolby Atmos\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ —Å–∞–π—Ç–µ',
                                      reply_markup=markup)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | API | Org - kino - starlight | Type: Route | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'atrium_hotel':
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("Atrium Hotel - –°–∞–π—Ç", url="atriumhotel.by")
                kino = telebot.types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='atriumhotel_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='hotel')
                markup.row(eda)
                markup.row(kino)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n*Atrium Hotel*\n\n',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ç–µ–ª–∏ - Atrium Hotel | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'atriumhotel_map':
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.34008325337547,53.90440691405426&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("Atrium Hotel - –°–∞–π—Ç", url="atriumhotel.by")

                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='hotel')
                markup.row(eda)

                markup.row(nazad_mus)
                bot.send_message(call.message.chat.id, f'*–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n*Atrium Hotel*\n\n',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | API | Org - hotel - AtriumHotel | Type: Route | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'metropol_hotel':
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("Metropol Hotel - –°–∞–π—Ç", url="metropol.by")
                kino = telebot.types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='metropolhotel_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='hotel')
                markup.row(eda)
                markup.row(kino)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n*Metropol Hotel*\n\n',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ç–µ–ª–∏ - Metropol Hotel | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'metropolhotel_map':
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.34008325337547,53.90440691405426&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("Metropol Hotel - –°–∞–π—Ç", url="metropol.by")

                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='hotel')
                markup.row(eda)

                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | API | Org - hotel - MetropolHotel | Type: Route | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
                bot.send_message(call.message.chat.id, f'*–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n*Metropol Hotel*\n\n',
                                      reply_markup=markup, parse_mode='MarkDown')
            elif call.data == 'gubernskaya':
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ ¬´–ì—É–±–µ—Ä–Ω—Å–∫–∞—è¬ª - –°–∞–π—Ç", url="gubernsky.by")
                kino = telebot.types.InlineKeyboardButton("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", callback_data='gubernskaya_map')
                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='hotel')
                markup.row(eda)
                markup.row(kino)
                markup.row(nazad_mus)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='*–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n*–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ ¬´–ì—É–±–µ—Ä–Ω—Å–∫–∞—è¬ª*\n\n',
                                      reply_markup=markup, parse_mode='MarkDown')
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | –û—Ç–µ–ª–∏ - ¬´–ì—É–±–µ—Ä–Ω—Å–∫–∞—è¬ª | {call.from_user.id} | {call.from_user.username} | ')
            elif call.data == 'gubernskaya_map':
                response = requests.get(
                    f'https://geocode-maps.yandex.ru/1.x/?apikey=93ab15a8-44aa-40a6-b11c-391d7b67f226&geocode=30.343399403473082,53.905020656219946&format=json')
                data = response.json()

                location = data['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos']
                longitude, latitude = map(float, location.split())
                bot.send_location(call.from_user.id, latitude, longitude)
                markup = telebot.types.InlineKeyboardMarkup()
                eda = telebot.types.InlineKeyboardButton("–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ ¬´–ì—É–±–µ—Ä–Ω—Å–∫–∞—è¬ª - –°–∞–π—Ç", url="gubernsky.by")

                nazad_mus = telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='hotel')
                markup.row(eda)

                markup.row(nazad_mus)
                tz_minsk = pytz.timezone("Europe/Minsk")
                print(
                    f'[LOG] | {datetime.now(tz_minsk)} | API | Org - hotel - gubernsky | Type: Route | Status: OK (200) | {call.from_user.id} | {call.from_user.username} | ')
                bot.send_message(call.message.chat.id, f'*–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ú–æ–≥–∏–ª–µ–≤–µ*\n\n*–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ ¬´–ì—É–±–µ—Ä–Ω—Å–∫–∞—è¬ª*\n\n',
                                      reply_markup=markup, parse_mode='MarkDown')


